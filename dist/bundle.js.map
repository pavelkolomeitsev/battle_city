{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://battle_city/./src/classes/Headquarter.ts","webpack://battle_city/./src/classes/Map.ts","webpack://battle_city/./src/classes/animation/BangAnimation.ts","webpack://battle_city/./src/classes/animation/SparkleAnimation.ts","webpack://battle_city/./src/classes/animation/XpointsAnimation.ts","webpack://battle_city/./src/classes/shells/GroupOfShells.ts","webpack://battle_city/./src/classes/shells/Shell.ts","webpack://battle_city/./src/classes/vehicles/Vehicle.ts","webpack://battle_city/./src/classes/vehicles/enemies/EnemyVehicle.ts","webpack://battle_city/./src/classes/vehicles/enemies/GroupOfEnemies.ts","webpack://battle_city/./src/classes/vehicles/enemies/Radar.ts","webpack://battle_city/./src/classes/vehicles/enemies/Turret.ts","webpack://battle_city/./src/classes/vehicles/player/Player.ts","webpack://battle_city/./src/classes/vehicles/player/Player2.ts","webpack://battle_city/./src/game.ts","webpack://battle_city/./src/scenes/BootScene.ts","webpack://battle_city/./src/scenes/GameOverScene.ts","webpack://battle_city/./src/scenes/HelpScene.ts","webpack://battle_city/./src/scenes/Level.ts","webpack://battle_city/./src/scenes/Level_1.ts","webpack://battle_city/./src/scenes/Level_2.ts","webpack://battle_city/./src/scenes/Level_3.ts","webpack://battle_city/./src/scenes/PostStartScene.ts","webpack://battle_city/./src/scenes/PostlevelScene.ts","webpack://battle_city/./src/scenes/PrelevelScene.ts","webpack://battle_city/./src/scenes/PreloadScene.ts","webpack://battle_city/./src/scenes/StartScene.ts","webpack://battle_city/./src/utils/LoadingBar.ts","webpack://battle_city/./src/utils/utils.ts","webpack://battle_city/webpack/bootstrap","webpack://battle_city/webpack/before-startup","webpack://battle_city/webpack/startup","webpack://battle_city/webpack/after-startup"],"sourcesContent":["import { StartPosition } from \"../utils/utils\";\r\n\r\nexport default class Headquarter extends Phaser.GameObjects.Sprite {\r\n    private _scene: Phaser.Scene = null;\r\n\r\n    constructor(scene: Phaser.Scene, position: StartPosition, atlasName: string, textureName: string) {\r\n        super(scene, position.x, position.y, atlasName, textureName);\r\n        this._scene = scene;\r\n        this.init();\r\n    }\r\n\r\n    private init(): void {\r\n        this._scene.add.existing(this); // add sprite to the scene\r\n        this._scene.physics.add.existing(this); // add sprite as physic object to Phaser engine\r\n        this.body.enable = true; // the physic body will be available for physic impacts\r\n        this.body.setImmovable(true);\r\n    }\r\n\r\n    public destroyHeadquarter(): void {\r\n        if (this.frame.name === \"headquarterRu\") {\r\n            this._scene.events.emit(\"enemy_headquarter_destroyed\", false, true);\r\n        } else if (this.frame.name === \"headquarterUa\") {\r\n            this._scene.events.emit(\"headquarterUa_destroyed\");\r\n        }\r\n        this._scene = null;\r\n        this.destroy();\r\n    }\r\n}","import { GROUND_FRICTION, FRICTIONS, StartPosition } from \"../utils/utils\";\r\nimport Radar from \"./vehicles/enemies/Radar\";\r\n\r\nexport default class Map {\r\n    private _scene: Phaser.Scene = null;\r\n    private _tileset: Phaser.Tilemaps.Tileset = null;\r\n    private _defenceArea1: Phaser.Geom.Rectangle = null;\r\n    private _defenceArea2: Phaser.Geom.Rectangle = null;\r\n    private _baseArea: Phaser.Geom.Rectangle = null;\r\n    private _level: number = 0;\r\n    public tilemap: Phaser.Tilemaps.Tilemap = null;\r\n    public explosiveObjects: Phaser.GameObjects.Sprite[] = [];\r\n    public stones: Phaser.GameObjects.Sprite[] = [];\r\n\r\n    constructor(scene: Phaser.Scene, level: number) {\r\n        this._scene = scene;\r\n        this._level = level; // value should be the same as in tilemap app -> group of layers\r\n        this.init();\r\n        this.create();\r\n    }\r\n\r\n    init(): void {\r\n        // create a tilemap object\r\n        this.tilemap = this._scene.make.tilemap({ key: \"tilemap\" });\r\n        // add images to tilemap\r\n        // 1 param look in \"tilemap.json\" prop tilesets - name\r\n        this._tileset = this.tilemap.addTilesetImage(\"terrain\", \"tileset\", 64, 64, 0, 0);\r\n    }\r\n\r\n    create(): void {\r\n        this.createLayers();\r\n        this.createExplosiveStaticLayer();\r\n        this.createStonesLayer();\r\n        this.createTreesLayer();\r\n        this.createAreas();\r\n        this.createDefenceAreas();\r\n    }\r\n    \r\n    private createLayers(): void {\r\n        // create 2 layers\r\n        this.tilemap.createLayer(\"grass\" + this._level, this._tileset); // \"level1/grass\"\r\n        this.tilemap.createLayer(\"road\" + this._level, this._tileset);\r\n    }\r\n\r\n    private createExplosiveStaticLayer(): void {\r\n        // first param - name of object`s layer in tilemap\r\n        // second param - callback function, which called for every image in tileset\r\n        this.tilemap.findObject(\"explosive_static\" + this._level, collisionObject => {\r\n            // we have to cast implicitly\r\n            // collisionObject - GameObject, but we need Sprite!\r\n            const castedObject: Phaser.GameObjects.Sprite = collisionObject as Phaser.GameObjects.Sprite;\r\n            let sprite: Phaser.GameObjects.Sprite = new Phaser.GameObjects.Sprite(this._scene, castedObject.x + castedObject.width / 2, castedObject.y - castedObject.height / 2, \"objects\", collisionObject.name);\r\n            this._scene.add.existing(sprite);\r\n            this._scene.physics.add.existing(sprite, true); // true -> to make it static\r\n            sprite.body.enable = true;\r\n            this.explosiveObjects.push(sprite);\r\n        });\r\n    }\r\n\r\n    private createStonesLayer(): void {\r\n        this.tilemap.findObject(\"stones\" + this._level, gameObject => {\r\n            const castedObject: Phaser.GameObjects.Sprite = gameObject as Phaser.GameObjects.Sprite;\r\n            // gameObject.name should be the same in \"objects.json\" and tilemap.json files\r\n            const sprite: Phaser.GameObjects.Sprite = new Phaser.GameObjects.Sprite(this._scene, castedObject.x + castedObject.width / 2, castedObject.y - castedObject.height / 2, \"objects\", gameObject.name);\r\n            this._scene.add.existing(sprite);\r\n            this._scene.physics.add.existing(sprite, true); // true -> to make it static\r\n            sprite.body.enable = true;\r\n            this.stones.push(sprite);\r\n        });\r\n    }\r\n\r\n    private createTreesLayer(): void {\r\n        this.tilemap.findObject(\"trees\" + this._level, gameObject => {\r\n            const castedObject: Phaser.GameObjects.Sprite = gameObject as Phaser.GameObjects.Sprite;\r\n            // gameObject.name should be the same in \"objects.json\" and tilemap.json files\r\n            const sprite: Phaser.GameObjects.Sprite = new Phaser.GameObjects.Sprite(this._scene, castedObject.x + castedObject.width / 2, castedObject.y - castedObject.height / 2, \"objects\", gameObject.name);\r\n            sprite.depth = 10;\r\n            this._scene.add.existing(sprite);\r\n            this._scene.physics.add.existing(sprite, false);\r\n        });\r\n    }\r\n\r\n    private createAreas(): void {\r\n        let array: Phaser.Types.Tilemaps.TiledObject[] = this.tilemap.filterObjects(\"enemies\" + this._level, checkpoint => checkpoint.name === \"defence_area1\");\r\n        // create rectangle phaser object\r\n        array.forEach((item: Phaser.Types.Tilemaps.TiledObject) => {\r\n            this._defenceArea1 = new Phaser.Geom.Rectangle(item.x, item.y, item.width, item.height);\r\n        });\r\n\r\n        array = this.tilemap.filterObjects(\"enemies\" + this._level, checkpoint => checkpoint.name === \"base_area\");\r\n        array.forEach((item: Phaser.Types.Tilemaps.TiledObject) => {\r\n            this._baseArea = new Phaser.Geom.Rectangle(item.x, item.y, item.width, item.height);\r\n        });\r\n        array = null;\r\n    }\r\n\r\n    private createDefenceAreas(): void {\r\n        let array: Phaser.Types.Tilemaps.TiledObject[] = this.tilemap.filterObjects(\"enemies\" + this._level, checkpoint => checkpoint.name === \"defence_area1\");\r\n        // create rectangle phaser object\r\n        array.forEach((item: Phaser.Types.Tilemaps.TiledObject) => {\r\n            this._defenceArea1 = new Phaser.Geom.Rectangle(item.x, item.y, item.width, item.height);\r\n        });\r\n\r\n        array = this.tilemap.filterObjects(\"enemies\" + this._level, checkpoint => checkpoint.name === \"defence_area2\");\r\n        array.forEach((item: Phaser.Types.Tilemaps.TiledObject) => {\r\n            this._defenceArea2 = new Phaser.Geom.Rectangle(item.x, item.y, item.width, item.height);\r\n        });\r\n        array = null;\r\n    }\r\n\r\n    public getPlayer(playerNumber: number): Phaser.Types.Tilemaps.TiledObject {\r\n        // find a player object in tilemap\r\n        return this.tilemap.findObject(\"players\" + this._level, playerObject => playerObject.name === `player${playerNumber}`);\r\n    }\r\n\r\n    public getTurretPosition(number: number): StartPosition {\r\n        const turret: Phaser.Types.Tilemaps.TiledObject = this.tilemap.findObject(\"enemies\" + this._level, playerObject => playerObject.name === `turret${number}`);\r\n        const position: StartPosition = {x: turret.x, y: turret.y};\r\n        return position;\r\n    }\r\n\r\n    public getRadarPosition(): StartPosition {\r\n        const radar: Phaser.Types.Tilemaps.TiledObject = this.tilemap.findObject(\"enemies\" + this._level, playerObject => playerObject.name === \"platform1\");\r\n        const position: StartPosition = {x: radar.x, y: radar.y};\r\n        return position;\r\n    }\r\n\r\n    public getHeadquarterPosition(isEnemy: boolean): StartPosition {\r\n        let objectLayer: string = \"\";\r\n        let name: string = \"\";\r\n        if (isEnemy) {\r\n            objectLayer = \"enemies\" + this._level;\r\n            name = \"headquarterRu\";\r\n        } else {\r\n            objectLayer = \"players\" + this._level;\r\n            name = \"headquarterUa\";\r\n        }\r\n        const radar: Phaser.Types.Tilemaps.TiledObject = this.tilemap.findObject(objectLayer, playerObject => playerObject.name === name);\r\n        const position: StartPosition = {x: radar.x, y: radar.y};\r\n        return position;\r\n    }\r\n\r\n    public getBasePosition(baseNumber: number): StartPosition {\r\n        const base: Phaser.Types.Tilemaps.TiledObject = this.tilemap.findObject(\"enemies\" + this._level, playerObject => playerObject.name === `base_${baseNumber}`);\r\n        const position: StartPosition = {x: base?.x, y: base?.y};\r\n        return position;\r\n    }\r\n\r\n    getTileFriction(vehicle: Phaser.GameObjects.Sprite): number {\r\n        for (const roadType in FRICTIONS) {\r\n            // match different road`s types where the car is running now\r\n            // if it`s in ROADS_FRICTION, return appropriate road`s type\r\n            // important!!! road`s types have to match exactly with layers` names in the map\r\n            const tile: Phaser.Tilemaps.Tile = this.tilemap.getTileAtWorldXY(vehicle.x, vehicle.y, false, this._scene.cameras.main, roadType + this._level);\r\n            if (tile) return FRICTIONS[roadType];\r\n        }    \r\n        // if it`s not -> return GRASS_FRICTION\r\n        return GROUND_FRICTION;\r\n    }\r\n\r\n    public checkPlayersPosition(radar: Radar, playersTank: Phaser.GameObjects.Sprite): boolean {\r\n        if (radar.active && playersTank.active) {\r\n            return this.isInDefenceArea(playersTank);\r\n        } else if (!radar.active && playersTank.active) {\r\n            return this.isInBaseArea(playersTank);\r\n        } else return false;\r\n    }\r\n\r\n    public checkPlayersPositionNoRadar(playersTank: Phaser.GameObjects.Sprite, areaNumber: number): boolean {\r\n        if (playersTank.active && areaNumber === 1) {\r\n            return this._defenceArea1.contains(playersTank.x, playersTank.y);\r\n        } else if (playersTank.active && areaNumber === 2) {\r\n            return this._defenceArea2.contains(playersTank.x, playersTank.y);\r\n        } else return false;\r\n    }\r\n\r\n    private isInDefenceArea(playersTank: Phaser.GameObjects.Sprite): boolean {\r\n        // check if player is in the defence area or not\r\n        if (playersTank.active) return this._defenceArea1.contains(playersTank.x, playersTank.y);\r\n    }\r\n\r\n    private isInBaseArea(playersTank: Phaser.GameObjects.Sprite): boolean {\r\n        // check if player is in the base area or not\r\n        if (playersTank.active) return this._baseArea.contains(playersTank.x, playersTank.y);\r\n    }\r\n}","import { BANG_ANIMATION, StartPosition } from \"../../utils/utils\";\r\n\r\nexport default class BangAnimation extends Phaser.GameObjects.Sprite {\r\n    private _scene: Phaser.Scene = null;\r\n    private _bangSound: Phaser.Sound.BaseSound = null;\r\n    \r\n    constructor(scene: Phaser.Scene, position: StartPosition, textureType: string) {\r\n        super(scene, position.x, position.y, textureType);\r\n        this._scene = scene;\r\n        this._scene.add.existing(this);\r\n        this._bangSound = this._scene.sound.add('simpleExplosion', {volume: 0.9});\r\n        this.bangAnimation();\r\n    }\r\n\r\n    private bangAnimation(): void {\r\n        this.play(BANG_ANIMATION);\r\n        this._bangSound.play();\r\n        this.once(Phaser.Animations.Events.ANIMATION_COMPLETE, () => this.destroy(), this);\r\n    }\r\n\r\n    public static generateBang(scene: Phaser.Scene, position: StartPosition): void {\r\n        new BangAnimation(scene, position, \"explosion1\");\r\n    }\r\n}","import { SPARKLE_ANIMATION, StartPosition } from \"../../utils/utils\";\r\n\r\nexport default class SparkleAnimation extends Phaser.GameObjects.Sprite {\r\n    private _scene: Phaser.Scene = null;\r\n    \r\n    constructor(scene: Phaser.Scene, position: StartPosition, textureType: string) {\r\n        super(scene, position.x, position.y, textureType);\r\n        this._scene = scene;\r\n        this._scene.add.existing(this);\r\n        this.sparkleAnimation();\r\n    }\r\n\r\n    private sparkleAnimation(): void {\r\n        this.play(SPARKLE_ANIMATION);\r\n        this.once(Phaser.Animations.Events.ANIMATION_COMPLETE, () => this.destroy(), this);\r\n    }\r\n\r\n    public static generateBang(scene: Phaser.Scene, position: StartPosition): void {\r\n        new SparkleAnimation(scene, position, \"sparkle1\");\r\n    }\r\n}","import { StartPosition } from \"../../utils/utils\";\r\n\r\nexport default class XpointsAnimation extends Phaser.GameObjects.Sprite {\r\n    private _scene: Phaser.Scene = null;\r\n    \r\n    constructor(scene: Phaser.Scene, position: StartPosition, textureType: string, spriteNumber: number) {\r\n        super(scene, position.x, position.y, textureType);\r\n        this._scene = scene;\r\n        this._scene.add.existing(this);\r\n        this.xpointsAnimation(spriteNumber);\r\n    }\r\n\r\n    private xpointsAnimation(spriteNumber: number): void {\r\n        this.play(`XPOINTS_${spriteNumber}_ANIMATION`);\r\n        this.once(Phaser.Animations.Events.ANIMATION_COMPLETE, () => this.destroy(), this);\r\n    }\r\n\r\n    public static generateAnimation(scene: Phaser.Scene, position: StartPosition, spriteNumber: number): void {\r\n        const texture: string = `${spriteNumber}xp`;\r\n        new XpointsAnimation(scene, position, texture, spriteNumber);\r\n    }\r\n}","import { ENEMY, StartPosition } from \"../../utils/utils\";\r\nimport Map from \"../Map\";\r\nimport Shell from \"./Shell\";\r\n\r\nexport default class GroupOfShells extends Phaser.Physics.Arcade.Group {\r\n    private _scene: Phaser.Scene = null;\r\n    private _map: Map = null;\r\n    private _texture: string = \"\";\r\n    private _enemy: boolean = false;\r\n    private _direction: number = 1;\r\n    private _nextShoot: number = 0;\r\n    private _pauseBetweenShoots: number = 0;\r\n\r\n    constructor(world: Phaser.Physics.Arcade.World, scene: Phaser.Scene, map: Map, texture: string, enemy: boolean = true, experience: number = 0) {\r\n        super(world, scene);\r\n        this._scene = scene;\r\n        this._map = map;\r\n        this._texture = texture;\r\n        this._enemy = enemy;\r\n        this._direction = enemy ? 1 : -1;\r\n        this.setPauseBetweenShoots(experience);\r\n    }\r\n\r\n    // mechanism for sprites` reusing for better performance\r\n    public createFire(parentSprite: Phaser.GameObjects.Sprite): void {\r\n        if (this._nextShoot > this._scene.time.now || !parentSprite.active) return; // to prevent toans of fires\r\n\r\n        let shell: Shell = this.getFirstDead();\r\n        const side: number = this._enemy ? -37 : 40;\r\n        \r\n        if (!shell) {\r\n            const vector: Phaser.Math.Vector2 = this._scene.physics.velocityFromAngle(parentSprite.angle + 270, side); // +270 - trick to set shell just before barrel\r\n            const position: StartPosition = { x: parentSprite.x + vector.x, y: parentSprite.y + vector.y };\r\n            shell = new Shell(this._scene, position, \"objects\", this._texture, parentSprite, this._map);\r\n            this.add(shell);\r\n        } else {\r\n            const vector: Phaser.Math.Vector2 = this._scene.physics.velocityFromAngle(parentSprite.angle + 270, side); // +270 - trick to set shell just before barrel\r\n            const position: StartPosition = { x: parentSprite.x + vector.x - 5, y: parentSprite.y + vector.y - 5};\r\n            shell.body.x = position.x;\r\n            shell.body.y = position.y;\r\n            shell.setAlive(true);\r\n        }\r\n        shell.flyOut(this._direction);\r\n\r\n        this._nextShoot = this._scene.time.now + this._pauseBetweenShoots; // instead one fire per 0.5 second\r\n    }\r\n\r\n    private setPauseBetweenShoots(experience: number): void {\r\n        switch (this._texture) {\r\n            case ENEMY.TANK.SHELL_TYPE:\r\n                this._pauseBetweenShoots = 1200; // enemy`s tank\r\n                break;\r\n            case ENEMY.BMP.SHELL_TYPE:\r\n                this._pauseBetweenShoots = 600; // enemy`s BMP\r\n                break;\r\n            case ENEMY.BTR.SHELL_TYPE:\r\n                this._pauseBetweenShoots = 300; // enemy`s BTR\r\n                break;\r\n            case \"bulletSand1\":\r\n                this._pauseBetweenShoots = 400 - experience; // player`s BMP\r\n                break;\r\n            case \"bulletRed2\":\r\n                this._pauseBetweenShoots = 800 - (experience * 2); // player`s tank\r\n                break;\r\n        }\r\n    }\r\n}","import { StartPosition, SPEED, ENEMY, PLAYER } from \"../../utils/utils\";\r\nimport Map from \"../Map\";\r\nimport Player from \"../vehicles/player/Player\";\r\n\r\nexport default class Shell extends Phaser.GameObjects.Sprite {\r\n    private _scene: Phaser.Scene = null;\r\n    private _map: Map = null;\r\n    private _shellSpeed: number = 0;\r\n    private _shellPower: number = 0;\r\n    public parentSprite: Phaser.GameObjects.Sprite = null;\r\n\r\n    constructor(scene: Phaser.Scene, position: StartPosition, atlasName: string, textureName: string, parentSprite: Phaser.GameObjects.Sprite, map: Map) {\r\n        super(scene, position.x, position.y, atlasName, textureName);\r\n        this._scene = scene;\r\n        this.parentSprite = parentSprite;\r\n        this._map = map;\r\n        this.init(textureName);\r\n        this._scene.events.on(\"update\", this.update, this);\r\n    }\r\n\r\n    protected init(textureName: string) {\r\n        this._scene.add.existing(this); // add sprite to the scene\r\n        this._scene.physics.add.existing(this); // add sprite as physic object to Phaser engine\r\n        this.body.enable = true; // the physic body of \"dragon\" will be available for physic impacts\r\n\r\n        switch (textureName) {\r\n            case ENEMY.BTR.SHELL_TYPE:\r\n                this._shellSpeed = SPEED.FASTER;\r\n                this._shellPower = ENEMY.BTR.SHELL_POWER;\r\n                break;\r\n            case ENEMY.BMP.SHELL_TYPE:\r\n                this._shellSpeed = SPEED.FASTER;\r\n                this._shellPower = ENEMY.BMP.SHELL_POWER;\r\n                break;\r\n            case ENEMY.TANK.SHELL_TYPE:\r\n                this._shellSpeed = SPEED.FASTER;\r\n                this._shellPower = ENEMY.TANK.SHELL_POWER;\r\n                break;\r\n            case PLAYER.BMP.SHELL_TYPE:\r\n                this._shellSpeed = SPEED.FASTEST;\r\n                this._shellPower = PLAYER.BMP.SHELL_POWER;\r\n                break;\r\n            case PLAYER.TANK.SHELL_TYPE:\r\n                this._shellSpeed = SPEED.FASTEST;\r\n                this._shellPower = PLAYER.TANK.SHELL_POWER;\r\n                break;\r\n        }\r\n    }\r\n\r\n    public get damage(): number {\r\n        return this._shellPower;\r\n    }\r\n\r\n    // check if shell is out of boarders\r\n    public update(): void {\r\n        if (this.active && (this.body.x < -20 ||\r\n            this.body.x > this._map.tilemap.widthInPixels + 20 ||\r\n            this.body.y < -20 ||\r\n            this.body.y > this._map.tilemap.heightInPixels + 20)) this.setAlive(false);\r\n    }\r\n\r\n    public setAlive(status: boolean): void {\r\n        this.body.enable = status;\r\n        this.setVisible(status);\r\n        this.setActive(status);\r\n    }\r\n\r\n    // direction has to be among 1 and -1. 1 for enemies, -1 for player\r\n    public flyOut(direction: number) {\r\n        const vector: Phaser.Math.Vector2 = new Phaser.Math.Vector2();\r\n        vector.setToPolar(this.parentSprite.rotation + (direction * Math.PI / 2)); // (this._tank.vehicle.rotation - Math.PI) - correct side from where shell throws, 30 - distance from tank`s core and shell\r\n        this.angle = this.parentSprite.angle; // tank and shell sprites should be on the same direction\r\n        this.body.setVelocity(vector.x * this._shellSpeed, vector.y * this._shellSpeed);\r\n        if (this.parentSprite instanceof Player) (this.parentSprite as Player).shootingSound.play();\r\n    }\r\n}","import { StartPosition } from \"../../utils/utils\";\r\nimport Map from \"../Map\";\r\n\r\nexport default class Vehicle extends Phaser.GameObjects.Sprite {\r\n    protected _scene: Phaser.Scene = null;\r\n    protected _map: Map = null;\r\n\r\n    constructor(scene: Phaser.Scene, position: StartPosition, atlasName: string, textureName: string, map: Map) {\r\n        super(scene, position.x, position.y, atlasName, textureName);\r\n        this._scene = scene;\r\n        this._map = map;\r\n        this.init();\r\n    }\r\n    \r\n    protected init() {\r\n        this._scene.add.existing(this); // add sprite to the scene\r\n        this._scene.physics.add.existing(this); // add sprite as physic object to Phaser engine\r\n        this.body.enable = true; // the physic body of \"dragon\" will be available for physic impacts\r\n    }\r\n\r\n    public fire(): void {}\r\n}","import { StartPosition, DIRECTION, ENEMY, goToOpositeDirection } from \"../../../utils/utils\";\r\nimport BangAnimation from \"../../animation/BangAnimation\";\r\nimport Map from \"../../Map\";\r\nimport Player from \"../player/Player\";\r\nimport GroupOfShells from \"../../shells/GroupOfShells\";\r\nimport Shell from \"../../shells/Shell\";\r\nimport SparkleAnimation from \"../../animation/SparkleAnimation\";\r\nimport Vehicle from \"../Vehicle\";\r\nimport Player2 from \"../player/Player2\";\r\nimport XpointsAnimation from \"../../animation/XpointsAnimation\";\r\nimport Headquarter from \"../../Headquarter\";\r\n\r\nexport default class EnemyVehicle extends Vehicle {\r\n    private _vehicleSpeed: number = 0;\r\n    private _type: string = \"\";\r\n    private _armour: number = 0;\r\n    private _timer: Phaser.Time.TimerEvent = null;\r\n    private _player1: Player = null;\r\n    private _player2: Player2 = null;\r\n    private _players: Player[] = [];\r\n    private _headquarterUa: Headquarter = null;\r\n    private _headquarterRu: Headquarter = null;\r\n    private _groupOfShells: GroupOfShells;\r\n    private _bases: StartPosition[] = [];\r\n    public direction: string = DIRECTION.DOWN;\r\n\r\n    constructor(scene: Phaser.Scene, position: StartPosition, atlasName: string, textureName: string, map: Map, player1: Player = null, player2: Player2 = null, headquarterUa: Headquarter = null, headquarterRu: Headquarter = null) {\r\n        super(scene, position, atlasName, textureName, map);\r\n\r\n        const shellType: string = this.setEnemiesType(textureName);\r\n        this._groupOfShells = new GroupOfShells(this._scene.physics.world, this._scene, this._map, shellType);\r\n        this._timer = this._scene.time.addEvent({\r\n            delay: 4000,\r\n            loop: true,\r\n            callback: this.changeDirection,\r\n            callbackScope: this\r\n        });\r\n        this.initBases(map);\r\n        this._player1 = player1;\r\n        this._player2 = player2;\r\n        if (player1) this._players.push(player1);\r\n        if (player2) this._players.push(player2);\r\n        this._headquarterUa = headquarterUa;\r\n        this._headquarterRu = headquarterRu;\r\n        this.direction = DIRECTION.DOWN;\r\n        this.handleCollisions();\r\n    }\r\n\r\n    private setEnemiesType(textureName: string): string {\r\n        switch (textureName) {\r\n            case \"enemy_btr\": // enemy BTR\r\n                this._type = ENEMY.BTR.TYPE;\r\n                this._vehicleSpeed = ENEMY.BTR.SPEED;\r\n                this._armour = ENEMY.BTR.ARMOUR;\r\n                return ENEMY.BTR.SHELL_TYPE;\r\n            case \"enemy\": // enemy BMP\r\n                this._type = ENEMY.BMP.TYPE;\r\n                this._vehicleSpeed = ENEMY.BMP.SPEED;\r\n                this._armour = ENEMY.BMP.ARMOUR;\r\n                return ENEMY.BMP.SHELL_TYPE;\r\n            case \"enemy_tank\": // enemy tank\r\n                this._type = ENEMY.TANK.TYPE;\r\n                this._vehicleSpeed = ENEMY.TANK.SPEED;\r\n                this._armour = ENEMY.TANK.ARMOUR;\r\n                return ENEMY.TANK.SHELL_TYPE;\r\n        }\r\n    }\r\n\r\n    private initBases(map: Map): void {\r\n        for (let i = 1; i < 4; i++) { // there are always 3 enemy`s bases\r\n            this._bases.push(map.getBasePosition(i));\r\n        }\r\n    }\r\n\r\n    private handleCollisions(): void {\r\n        // enemy shoots players\r\n        this._scene.physics.add.overlap(this._players, this._groupOfShells, this.shellsPlayerCollision, null, this);\r\n        if (this._headquarterUa) {\r\n            this._scene.physics.add.overlap(this._headquarterUa, this._groupOfShells, this.shellsHeadquarterCollision, null, this);\r\n        }\r\n        // enemy shoots boxes\r\n        this._scene.physics.add.overlap(this._map.explosiveObjects, this._groupOfShells, this.shellsBoxesCollision, null, this);\r\n        this._scene.physics.add.overlap(this._map.stones, this._groupOfShells, this.shellsStoneCollision, null, this);\r\n        // enemy collide objects\r\n        const stopableArray: Phaser.GameObjects.Sprite[] = [...this._map.stones, ...this._map.explosiveObjects];\r\n        if (this._headquarterRu) stopableArray.push(this._headquarterRu);\r\n        this._scene.physics.add.collider(stopableArray, this, this.handleEnemiesCollision, null, this);\r\n        this._scene.events.on(\"update\", this.fire, this);\r\n    }\r\n\r\n    public destroyEnemy(shell: Shell): void {\r\n        this._armour -= shell.damage;\r\n        const id: string = (shell.parentSprite as Player).id;\r\n        switch (this._type) {\r\n            case ENEMY.TANK.TYPE:\r\n                if ((this._armour < 150) && (this._armour >= 80)) {\r\n                    this.setTexture(\"objects\", \"enemy_tank1\");\r\n                } else if ((this._armour < 80) && (this._armour > 0)) {\r\n                    this.setTexture(\"objects\", \"enemy_tank2\");\r\n                } else if (this._armour <= 0) {\r\n                    this._scene.events.off(\"update\", this.fire, this);\r\n                    this._timer.remove();\r\n                    this.destroy();\r\n                    const position: StartPosition = { x: shell.x, y: shell.y };\r\n                    XpointsAnimation.generateAnimation(this._scene, position, 3);\r\n                    this.calculateExperiencePoints(id, 1.1, ENEMY.TANK.TYPE);\r\n                    this._scene.events.emit(\"enemy_dead\", true, false);\r\n                }\r\n                break;\r\n            case ENEMY.BMP.TYPE:\r\n                if ((this._armour <= 35) && (this._armour > 0)) {\r\n                    this.setTexture(\"objects\", \"enemy_bmp1\");\r\n                } else if (this._armour <= 0) {\r\n                    this._scene.events.off(\"update\", this.fire, this);\r\n                    this._timer.remove();\r\n                    this.destroy();\r\n                    const position: StartPosition = { x: shell.x, y: shell.y };\r\n                    XpointsAnimation.generateAnimation(this._scene, position, 2);\r\n                    this.calculateExperiencePoints(id, 0.7, ENEMY.BMP.TYPE);\r\n                    this._scene.events.emit(\"enemy_dead\", true, false);\r\n                }       \r\n                break;\r\n            case ENEMY.BTR.TYPE:\r\n                if ((this._armour <= 26) && (this._armour > 0)) {\r\n                    this.setTexture(\"objects\", \"enemy_btr1\");\r\n                } else if (this._armour <= 0) {\r\n                    this._scene.events.off(\"update\", this.fire, this);\r\n                    this._timer.remove();\r\n                    this.destroy();\r\n                    const position: StartPosition = { x: shell.x, y: shell.y };\r\n                    XpointsAnimation.generateAnimation(this._scene, position, 1);\r\n                    this.calculateExperiencePoints(id, 0.4, ENEMY.BTR.TYPE);\r\n                    this._scene.events.emit(\"enemy_dead\", true, false);\r\n                }       \r\n                break;\r\n        }\r\n    }\r\n\r\n    public get velocity(): number {\r\n        return this.getMaxSpeed();\r\n    }\r\n\r\n    protected getMaxSpeed(): number {\r\n        return this._vehicleSpeed * this._map.getTileFriction(this);\r\n    }\r\n\r\n    public changeDirection(): void {\r\n        const [x, y, angle] = this.getVehiclesDirection();\r\n        this.body?.setVelocity(x, y); // set direction\r\n        this.angle = angle; // set correct sprite`s angle\r\n    }\r\n\r\n    private getVehiclesDirection(): [number, number, number] { // x, y, angle\r\n        const direction: number = Math.floor(Math.random() * 4) + 1; // get random value between 1 and 4\r\n        switch (direction) {\r\n            case 1:\r\n                this.direction = DIRECTION.UP;\r\n                return [0, -this.velocity, 180]; // go up\r\n            case 2:\r\n                this.direction = DIRECTION.RIGHT;\r\n                return [this.velocity, 0, -90]; // go right\r\n            case 3:\r\n                this.direction = DIRECTION.DOWN;\r\n                return [0, this.velocity, 0]; // go down\r\n            case 4:\r\n                this.direction = DIRECTION.LEFT;\r\n                return [-this.velocity, 0, 90]; // go left\r\n            default:\r\n                this.direction = DIRECTION.DOWN;\r\n                return [0, this.velocity, 0];\r\n        }\r\n    }\r\n\r\n    public moveOut(): void {\r\n        this.body?.setVelocity(0, this.velocity * 1.5); // * 1.3 - trick to run out quicker\r\n    }\r\n\r\n    public fire(): void {\r\n        if (this._groupOfShells) {\r\n            this._groupOfShells.createFire(this); // start shooting\r\n        }\r\n        this._bases.forEach((base: StartPosition) => { // send enemy down if it comes close to the base\r\n            if ((Phaser.Math.Distance.BetweenPoints(this, base) < 80) && this.body) {\r\n                this.body?.setVelocity(0, this.velocity * 1.5);\r\n                this.angle = 0;\r\n            }\r\n        });\r\n        // if enemy comes close enough to player, it will shoot\r\n        this._players.forEach((player: Player) => {\r\n            if ((this._type !== ENEMY.TANK.TYPE) && (Phaser.Math.Distance.BetweenPoints(this, player) < 350) && player.body && this.body) {\r\n                this.body.stop();\r\n                const angle = Phaser.Math.Angle.Between(this.x, this.y, player.x, player.y);\r\n                this.rotation = angle - Math.PI / 2; // Math.PI / 2 - trick to turn tank`s barrel oposite to the player\r\n            } else if ((this._type === ENEMY.TANK.TYPE) && (Phaser.Math.Distance.BetweenPoints(this, player) < 550) && player.body && this.body) {\r\n                this.body.stop();\r\n                const angle = Phaser.Math.Angle.Between(this.x, this.y, player.x, player.y);\r\n                this.rotation = angle - Math.PI / 2; // Math.PI / 2 - trick to turn tank`s barrel oposite to the player\r\n            }    \r\n        });\r\n        \r\n        if (!this._headquarterUa) return;\r\n        if ((this._type !== ENEMY.TANK.TYPE) && (Phaser.Math.Distance.BetweenPoints(this, this._headquarterUa) < 350) && this._headquarterUa.body && this.body) {\r\n            this.body.stop();\r\n            const angle = Phaser.Math.Angle.Between(this.x, this.y, this._headquarterUa.x, this._headquarterUa.y);\r\n            this.rotation = angle - Math.PI / 2; // Math.PI / 2 - trick to turn tank`s barrel oposite to the player\r\n        } else if ((this._type === ENEMY.TANK.TYPE) && (Phaser.Math.Distance.BetweenPoints(this, this._headquarterUa) < 550) && this._headquarterUa.body && this.body) {\r\n            this.body.stop();\r\n            const angle = Phaser.Math.Angle.Between(this.x, this.y, this._headquarterUa.x, this._headquarterUa.y);\r\n            this.rotation = angle - Math.PI / 2; // Math.PI / 2 - trick to turn tank`s barrel oposite to the player\r\n        }\r\n    }\r\n\r\n    private shellsPlayerCollision(player: Player, shell: Shell): void {\r\n        const position: StartPosition = { x: player.x, y: player.y };\r\n        BangAnimation.generateBang(this._scene, position);\r\n        shell.setAlive(false);\r\n        player.destroyPlayer(shell);\r\n    }\r\n\r\n    private shellsHeadquarterCollision(headquarter: Headquarter, shell: Shell): void {\r\n        const position: StartPosition = { x: headquarter.x, y: headquarter.y };\r\n        BangAnimation.generateBang(this._scene, position);\r\n        shell.setAlive(false);\r\n        headquarter.body.destroy();\r\n        headquarter.destroy();\r\n        this._scene.events.emit(\"headquarterUa_destroyed\");\r\n    }\r\n\r\n    private shellsBoxesCollision(target: Phaser.GameObjects.Sprite, shell: Shell): void {\r\n        const position: StartPosition = { x: target.x, y: target.y };\r\n        BangAnimation.generateBang(this._scene, position);\r\n        shell.setAlive(false);\r\n        target.destroy();\r\n    }\r\n\r\n    private shellsStoneCollision(target: Phaser.GameObjects.Sprite, shell: Shell): void {\r\n        const vector: Phaser.Math.Vector2 = this._scene.physics.velocityFromAngle(shell.angle + 270, -20); // +270 - trick to set sparkle just before the stone\r\n        const position: StartPosition = { x: shell.x + vector.x, y: shell.y + vector.y };\r\n        SparkleAnimation.generateBang(this._scene, position);\r\n        shell.setAlive(false);\r\n    }\r\n\r\n    private handleEnemiesCollision(gameObject: Phaser.GameObjects.Sprite, enemy: EnemyVehicle): void {\r\n        goToOpositeDirection(enemy);\r\n    }\r\n\r\n    private calculateExperiencePoints(id: string, points: number, enemyType: string): void {\r\n        if (this._player1 && id === \"P1\") {\r\n            this._player1.experience += points;\r\n            this.calculateDestroyedEnemies(this._player1, enemyType);\r\n        } else if (this._player2 && id === \"P2\") {\r\n            this._player2.experience += points;\r\n            this.calculateDestroyedEnemies(this._player2, enemyType);\r\n        }\r\n    }\r\n\r\n    private calculateDestroyedEnemies(player: Player, enemyType: string): void {\r\n        switch (enemyType) {\r\n            case ENEMY.TANK.TYPE:\r\n                player.tanksPerLevel++;\r\n                break;\r\n            case ENEMY.BMP.TYPE:\r\n                player.bmpPerLevel++;\r\n                break;\r\n            case ENEMY.BTR.TYPE:\r\n                player.btrPerLevel++;\r\n                break;\r\n        }\r\n    }\r\n}","import Map from \"../../Map\";\r\nimport EnemyVehicle from \"./EnemyVehicle\";\r\nimport { goToOpositeDirection, StartPosition } from \"../../../utils/utils\";\r\nimport Player from \"../player/Player\";\r\nimport Player2 from \"../player/Player2\";\r\nimport Headquarter from \"../../Headquarter\";\r\n\r\nexport default class GroupOfEnemies extends Phaser.Physics.Arcade.Group {\r\n    private _scene: Phaser.Scene = null;\r\n    private _map: Map = null;\r\n    private _timer: Phaser.Time.TimerEvent = null;\r\n    private _enemies: number[] = [];\r\n    private _player1: Player = null;\r\n    private _player2: Player2 = null;\r\n    private _headquarterUa: Headquarter = null;\r\n    private _headquarterRu: Headquarter = null;\r\n    private _numberOfBase: number = 0;\r\n    private _maxEnemies: number = 6;\r\n    public counter: number = 0;\r\n\r\n    constructor(world: Phaser.Physics.Arcade.World, scene: Phaser.Scene, map: Map, enemies: number[], maxEnemies: number, numberOfBase: number, player1: Player = null, player2: Player2 = null, headquarterUa: Headquarter = null, headquarterRu: Headquarter = null) {\r\n        super(world, scene);\r\n        this._scene = scene;\r\n        this._map = map;\r\n        this._enemies = enemies;\r\n        this._maxEnemies = maxEnemies;\r\n        this._player1 = player1;\r\n        this._player2 = player2;\r\n        this._headquarterUa = headquarterUa;\r\n        this._headquarterRu = headquarterRu;\r\n        this._numberOfBase = numberOfBase;\r\n        this._timer = this._scene.time.addEvent({ // add new enemy every 3 seconds\r\n            delay: 2700,\r\n            loop: true,\r\n            callback: this.addEnemy,\r\n            callbackScope: this\r\n        });\r\n        // prevent enemy`s overlapping with each other\r\n        this._scene.physics.add.collider(this, this, this.handleEnemyVehicleCollision, null, this);\r\n    }\r\n\r\n    private addEnemy(): void {\r\n        if (this.counter < this._maxEnemies) { // hold no more than max enemies on the map at one time\r\n            this._enemies.length > 0 ? this.createEnemy() : this._timer?.remove();\r\n        }\r\n    }\r\n\r\n    private createEnemy(): void {\r\n        const baseNumber: number = Math.floor(Math.random() * this._numberOfBase) + 1;\r\n        const position: StartPosition = this._map.getBasePosition(baseNumber);\r\n        // get last el from array\r\n        // transform el into texture\r\n        // delete last el from array\r\n        const enemiesTexture: string = this.getEnemyVehicleTexture(this._enemies.pop());\r\n        const enemy: EnemyVehicle = new EnemyVehicle(this._scene, position, \"objects\", enemiesTexture, this._map, this._player1, this._player2, this._headquarterUa, this._headquarterRu);\r\n        this.add(enemy);\r\n\r\n        enemy.moveOut();\r\n        ++this.counter;\r\n    }\r\n\r\n    private getEnemyVehicleTexture(index: number): string {\r\n        switch (index) {\r\n            case 1:\r\n                return \"enemy_btr\"; // BTR\r\n            case 2:\r\n                return \"enemy\"; // BMP\r\n            case 3:\r\n                return \"enemy_tank\"; // tank\r\n        }\r\n    }\r\n\r\n    private handleEnemyVehicleCollision(firstEnemy: EnemyVehicle, secondEnemy: EnemyVehicle): void {\r\n        goToOpositeDirection(firstEnemy);\r\n        secondEnemy.body.stop();\r\n    }\r\n}","import { goToOpositeDirection, RADAR_ANIMATION, StartPosition } from \"../../../utils/utils\";\r\nimport XpointsAnimation from \"../../animation/XpointsAnimation\";\r\nimport Shell from \"../../shells/Shell\";\r\nimport Player from \"../player/Player\";\r\nimport Player2 from \"../player/Player2\";\r\nimport EnemyVehicle from \"./EnemyVehicle\";\r\nimport GroupOfEnemies from \"./GroupOfEnemies\";\r\n\r\nexport default class Radar extends Phaser.GameObjects.Sprite {\r\n    private _scene: Phaser.Scene = null;\r\n    private _player1: Player = null;\r\n    private _player2: Player2 = null;\r\n\r\n    constructor(scene: Phaser.Scene, position: StartPosition, atlasName: string, textureName: string, enemies: GroupOfEnemies, player1: Player = null, player2: Player2 = null) {\r\n        super(scene, position.x, position.y, atlasName, textureName);\r\n        this._scene = scene;\r\n        this._player1 = player1;\r\n        this._player2 = player2;\r\n        this.init();\r\n        this.runRadar();\r\n        const stopableArray: Phaser.GameObjects.GameObject[] = enemies.getChildren();\r\n        this._scene.physics.add.collider(stopableArray, this, this.handleCollision, null, this);\r\n    }\r\n\r\n    private init(): void {\r\n        this._scene.add.existing(this); // add sprite to the scene\r\n        this._scene.physics.add.existing(this); // add sprite as physic object to Phaser engine\r\n        this.body.enable = true; // the physic body of \"dragon\" will be available for physic impacts\r\n        this.body.setImmovable(true);\r\n    }\r\n\r\n    private runRadar(): void {\r\n        this.play(RADAR_ANIMATION);\r\n    }\r\n\r\n    public destroyRadar(shell: Shell): void {\r\n        const id: string = (shell.parentSprite as Player).id;\r\n        const position: StartPosition = { x: shell.x, y: shell.y };\r\n        XpointsAnimation.generateAnimation(this._scene, position, 1);\r\n        this.calculateExperiencePoints(id, 0.4);\r\n        this._scene.events.emit(\"enemy_dead\", true, false);\r\n        this._scene = null;\r\n        this.destroy();\r\n    }\r\n\r\n    private calculateExperiencePoints(id: string, points: number): void {\r\n        if (this._player1 && id === \"P1\") {\r\n            this._player1.experience += points;\r\n            this._player1.radarPerLevel++;\r\n        } else if (this._player2 && id === \"P2\") {\r\n            this._player2.experience += points;\r\n            this._player2.radarPerLevel++;\r\n        }\r\n    }\r\n\r\n    private handleCollision(enemy: EnemyVehicle, radar: Phaser.GameObjects.Sprite): void {\r\n        goToOpositeDirection(enemy);\r\n    }\r\n}","import { ENEMY, goToOpositeDirection, StartPosition } from \"../../../utils/utils\";\r\nimport GroupOfShells from \"../../shells/GroupOfShells\";\r\nimport Map from \"../../Map\";\r\nimport Player from \"../player/Player\";\r\nimport Shell from \"../../shells/Shell\";\r\nimport BangAnimation from \"../../animation/BangAnimation\";\r\nimport SparkleAnimation from \"../../animation/SparkleAnimation\";\r\nimport Player2 from \"../player/Player2\";\r\nimport XpointsAnimation from \"../../animation/XpointsAnimation\";\r\nimport Radar from \"./Radar\";\r\nimport EnemyVehicle from \"./EnemyVehicle\";\r\nimport GroupOfEnemies from \"./GroupOfEnemies\";\r\n\r\nexport default class Turret {\r\n    private static idCounter: number = 0;\r\n\r\n    private _scene: Phaser.Scene = null;\r\n    private _map: Map = null;\r\n    private _armour: number = 0;\r\n    private _player1: Player = null;\r\n    private _player2: Player2 = null;\r\n    private _players: Player[] = [];\r\n    private _groupOfShells: GroupOfShells = null;\r\n    private _baseNumber: number = 1;\r\n    private _radar: Radar = null;\r\n    public platform: Phaser.GameObjects.Sprite = null;\r\n    public turret: Phaser.GameObjects.Sprite = null;\r\n    public isFiring: boolean = true;\r\n    public id: number = 0;\r\n\r\n    constructor(scene: Phaser.Scene, position: StartPosition, map: Map, enemies: GroupOfEnemies, player1: Player, player2: Player2 = null, radar: Radar = null, baseNumber: number = 1) {\r\n        this._scene = scene;\r\n        this._map = map;\r\n        this._armour = ENEMY.TURRET.ARMOUR;\r\n        this._player1 = player1;\r\n        this._player2 = player2;\r\n        if (player1) this._players.push(player1);\r\n        if (player2) this._players.push(player2);\r\n        this._baseNumber = baseNumber;\r\n        this._radar = radar;\r\n        this.init(position, this._map, ENEMY.TURRET.SHELL_TYPE);\r\n        // handle shooting on player\r\n        this._scene.physics.add.overlap(this._players, this._groupOfShells, this.shellsPlayerCollision, null, this);\r\n        // handle shooting on boxes\r\n        this._scene.physics.add.overlap(this._map.explosiveObjects, this._groupOfShells, this.boxesShellsCollision, null, this);\r\n        // handle shooting on stones\r\n        this._scene.physics.add.overlap(this._map.stones, this._groupOfShells, this.stonesShellsCollision, null, this);\r\n        // handle enemy vehicles collisions\r\n        const stopableArray: Phaser.GameObjects.GameObject[] = enemies.getChildren();\r\n        this._scene.physics.add.collider(stopableArray, this.platform, this.handleCollision, null, this);\r\n        this.id = ++Turret.idCounter;\r\n        this._scene.events.on(\"update\", this.runTurret, this);\r\n    }\r\n\r\n    public set radar(radar: Radar) {\r\n        this._radar = radar;\r\n    }\r\n    \r\n    private init(position: StartPosition, map: Map, shellTexture: string): void {\r\n        this.platform = new Phaser.GameObjects.Sprite(this._scene, position.x, position.y, \"objects\", \"platform\");\r\n        this._scene.add.existing(this.platform);\r\n        this._scene.physics.add.existing(this.platform);\r\n        this.platform.body.enable = true;\r\n        this.platform.body.setImmovable(true);\r\n        this.turret = new Phaser.GameObjects.Sprite(this._scene, position.x, position.y, \"objects\", \"turret\");\r\n        this._scene.add.existing(this.turret);\r\n        this._scene.physics.add.existing(this.turret);\r\n        this.turret.body.enable = true;\r\n        this._groupOfShells = new GroupOfShells(this._scene.physics.world, this._scene, map, shellTexture);\r\n    }\r\n\r\n    private shellsPlayerCollision(player: Player, shell: Shell): void {\r\n        const position: StartPosition = { x: player.x, y: player.y };\r\n        BangAnimation.generateBang(this._scene, position);\r\n        shell.setAlive(false);\r\n        player.destroyPlayer(shell);\r\n    }\r\n\r\n    private boxesShellsCollision(box: Phaser.GameObjects.Sprite, shell: Shell): void {\r\n        const position: StartPosition = { x: box.x, y: box.y };\r\n        BangAnimation.generateBang(this._scene, position);\r\n        box.destroy();\r\n        shell.setAlive(false);\r\n    }\r\n\r\n    private stonesShellsCollision(stone: Phaser.GameObjects.Sprite, shell: Shell): void {\r\n        const vector: Phaser.Math.Vector2 = this._scene.physics.velocityFromAngle(shell.angle + 270, +20); // +270 - trick to set sparkle just before the stone\r\n        const position: StartPosition = { x: shell.x + vector.x, y: shell.y + vector.y };\r\n        SparkleAnimation.generateBang(this._scene, position);\r\n        shell.setAlive(false);\r\n    }\r\n\r\n    private handleCollision(enemy: EnemyVehicle, platform: Phaser.GameObjects.Sprite): void {\r\n        goToOpositeDirection(enemy);\r\n    }\r\n\r\n    public runTurret(): void {\r\n        if (!this._radar) { // if it`s no radar, there are two turrets and two check areas\r\n            this._players.forEach((player: Player) => this.run(player, this._map.checkPlayersPositionNoRadar(player, this._baseNumber)));\r\n            // if (!this._player2) {\r\n            //     this.run(this._player1, this._map.checkPlayersPositionNoRadar(this._player1, this._baseNumber));\r\n            // } else {\r\n            //     this.run(this._player1, this._map.checkPlayersPositionNoRadar(this._player1, this._baseNumber));\r\n            //     this.run(this._player2, this._map.checkPlayersPositionNoRadar(this._player2, this._baseNumber));\r\n            // }\r\n        } else {\r\n            this._players.forEach((player: Player) => this.run(player, this._map.checkPlayersPosition(this._radar, player)));\r\n            // if (!this._player2) {\r\n            //     this.run(this._player1, this._map.checkPlayersPosition(this._radar, this._player1));\r\n            // } else {\r\n            //     this.run(this._player1, this._map.checkPlayersPosition(this._radar, this._player1));\r\n            //     this.run(this._player2, this._map.checkPlayersPosition(this._radar, this._player2));\r\n            // }\r\n        }\r\n    }\r\n\r\n    private run(player: Player, isPlayerNear: boolean): void {\r\n        isPlayerNear ? this.watchAndFire(player) : this.watch(player);\r\n    }\r\n\r\n    private watch(player: Player): void {\r\n        this.getCorrectAngle(player);\r\n    }\r\n\r\n    private watchAndFire(player: Player): void {\r\n        this.getCorrectAngle(player);\r\n        this.fire();\r\n    }\r\n\r\n    private getCorrectAngle(player: Player): void {\r\n        if (this.turret && player) {\r\n            const angle = Phaser.Math.Angle.Between(this.turret.x, this.turret.y, player.x, player.y);\r\n            this.turret.rotation = angle - Math.PI / 2; // Math.PI / 2 - trick to turn turret oposite to the tank\r\n        }\r\n    }\r\n\r\n    private fire(): void {\r\n        if (this._groupOfShells && this.isFiring) this._groupOfShells.createFire(this.turret);\r\n    }\r\n\r\n    public destroyTurret(shell: Shell): void {\r\n        this._armour -= shell.damage;\r\n        if ((this._armour <= 130) && (this._armour > 60)) {\r\n            this.turret.setTexture(\"objects\", \"turret_2\");\r\n        } else if ((this._armour <= 60) && (this._armour > 0)) {\r\n            this.turret.setTexture(\"objects\", \"turret_1\");\r\n        } else if (this._armour <= 0) {\r\n            this.turret.destroy();\r\n            this.turret = null;\r\n            this.platform.destroy();\r\n            this.platform = null;\r\n            this._groupOfShells = null;\r\n            this._radar = null;\r\n            const id: string = (shell.parentSprite as Player).id;\r\n            const position: StartPosition = { x: shell.x, y: shell.y };\r\n            XpointsAnimation.generateAnimation(this._scene, position, 3);\r\n            this.calculateExperiencePoints(id, 1.1);\r\n            this._scene.events.off(\"update\", this.runTurret, this);\r\n            this._scene.events.emit(\"enemy_dead\", true, false);\r\n            this._scene = null;\r\n        }\r\n    }\r\n\r\n    private calculateExperiencePoints(id: string, points: number): void {\r\n        if (this._player1 && id === \"P1\") {\r\n            this._player1.experience += points;\r\n            this._player1.turretsPerLevel++;\r\n        } else if (this._player2 && id === \"P2\") {\r\n            this._player2.experience += points;\r\n            this._player2.turretsPerLevel++;\r\n        }\r\n    }\r\n}","import Vehicle from \"../Vehicle\";\r\nimport Map from \"../../Map\";\r\nimport { PLAYER, PLAYER_SPEED, SPEED, StartPosition, TURNS } from \"../../../utils/utils\";\r\nimport GroupOfShells from \"../../shells/GroupOfShells\";\r\nimport Shell from \"../../shells/Shell\";\r\nimport BangAnimation from \"../../animation/BangAnimation\";\r\nimport SparkleAnimation from \"../../animation/SparkleAnimation\";\r\nimport Player2 from \"./Player2\";\r\nimport Headquarter from \"../../Headquarter\";\r\nimport Radar from \"../enemies/Radar\";\r\nimport EnemyVehicle from \"../enemies/EnemyVehicle\";\r\nimport GroupOfEnemies from \"../enemies/GroupOfEnemies\";\r\nimport Turret from \"../enemies/Turret\";\r\n\r\nexport default class Player extends Vehicle {\r\n    private _cursor: Phaser.Types.Input.Keyboard.CursorKeys = null;\r\n    private _player2: Player2 = null;\r\n    protected _velocity: number;\r\n    protected _fire: Phaser.Input.Keyboard.Key = null;\r\n    protected _armour: number = 0;\r\n    protected _vehicleType: string = \"\";\r\n    protected _enemyVehicles: GroupOfEnemies = null;\r\n    protected _enemyTurrets: Turret[] = [];\r\n    protected _enemyTurretPlatforms: Phaser.GameObjects.Sprite[] = [];\r\n    protected _enemiesStatic: Phaser.GameObjects.Sprite[] = [];\r\n    protected _radar: Radar = null;\r\n    protected _headquarterUa: Headquarter = null;\r\n    protected _headquarterRu: Headquarter = null;\r\n    public shootingSound: Phaser.Sound.BaseSound = null;\r\n    public groupOfShells: GroupOfShells = null;\r\n    public id: string = \"P1\";\r\n    public experience: number = 0;\r\n    public tanksPerLevel: number = 0;\r\n    public bmpPerLevel: number = 0;\r\n    public btrPerLevel: number = 0;\r\n    public turretsPerLevel: number = 0;\r\n    public radarPerLevel: number = 0;\r\n\r\n    constructor(scene: Phaser.Scene, position: StartPosition, atlasName: string, textureName: string, map: Map, shellTexture: string, experience: number) {\r\n        super(scene, position, atlasName, textureName, map);\r\n        this._velocity = 0;\r\n        this._cursor = this._scene.input.keyboard.createCursorKeys(); // take control from keyboard, exactly up and down keys\r\n        this._fire = this._scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.NUMPAD_ZERO);\r\n        this.experience = experience;\r\n        this.groupOfShells = new GroupOfShells(this._scene.physics.world, this._scene, this._map, shellTexture, false, experience); // experience from 0 to 200\r\n        this.setVehicleType(textureName);\r\n    }\r\n\r\n    protected setVehicleType(textureName: string): void {\r\n        switch (textureName) {\r\n            case \"player_tank\":\r\n                this._vehicleType = \"player_tank\";\r\n                this._armour = PLAYER.TANK.ARMOUR;\r\n                this.shootingSound = this._scene.sound.add('playerTankShooting', {volume: 0.5});\r\n                break;\r\n            case \"player_ifv\":\r\n                this._vehicleType = \"player_ifv\";\r\n                this._armour = PLAYER.BMP.ARMOUR;\r\n                this.shootingSound = this._scene.sound.add('playerIfvShooting', {volume: 0.3});\r\n                break;\r\n        }\r\n    }\r\n\r\n    public set enemyVehicles(enemyVehicles: GroupOfEnemies) {\r\n        this._enemyVehicles = enemyVehicles;\r\n    }\r\n\r\n    public set enemyTurrets(enemyTurrets: Turret[]) {\r\n        this._enemyTurrets = enemyTurrets;\r\n    }\r\n\r\n    public set enemyTurretPlatforms(enemyTurretPlatforms: Phaser.GameObjects.Sprite[]) {\r\n        this._enemyTurretPlatforms = enemyTurretPlatforms;\r\n    }\r\n\r\n    public set enemiesStatic(enemiesStatic: Phaser.GameObjects.Sprite[]) {\r\n        this._enemiesStatic = enemiesStatic;\r\n    }\r\n\r\n    public set player2(player2: Player2) {\r\n        this._player2 = player2;\r\n    }\r\n    \r\n    public set radar(radar: Radar) {\r\n        this._radar = radar;\r\n    }\r\n\r\n    public set headquarterUa(headquarterUa: Headquarter) {\r\n        this._headquarterUa = headquarterUa;\r\n    }\r\n\r\n    public set headquarterRu(headquarterRu: Headquarter) {\r\n        this._headquarterRu = headquarterRu;\r\n    }\r\n\r\n    public handleCollisions(): void {\r\n        // handle shooting on boxes\r\n        this._scene.physics.add.overlap(this._map.explosiveObjects, this.groupOfShells, this.boxesShellsCollision, null, this);\r\n        // handle shooting on stones\r\n        this._scene.physics.add.overlap(this._map.stones, this.groupOfShells, this.stonesShellsCollision, null, this);\r\n        const stopableArray: Phaser.GameObjects.Sprite[] = [...this._map.stones, ...this._map.explosiveObjects];\r\n        if (this._player2) stopableArray.push(this._player2);\r\n        if (this._radar) stopableArray.push(this._radar);\r\n        if (this._headquarterUa) stopableArray.push(this._headquarterUa);\r\n        if (this._headquarterRu) stopableArray.push(this._headquarterRu);\r\n        // handle stop player when collide\r\n        this._scene.physics.add.collider(stopableArray, this, this.handlePlayerStop, null, this);\r\n        // handle player shooting\r\n        this._scene.physics.add.overlap(this._enemyVehicles, this.groupOfShells, this.handlePlayerShootOnEnemyVehicle, null, this);\r\n        this._scene.physics.add.overlap(this._enemyTurretPlatforms, this.groupOfShells, this.handlePlayerShootOnEnemiesTurrets, null, this);\r\n        this._scene.physics.add.overlap(this._enemiesStatic, this.groupOfShells, this.handlePlayerShootOnEnemiesStatic, null, this);\r\n    }\r\n\r\n    protected boxesShellsCollision(box: Phaser.GameObjects.Sprite, shell: Shell): void {\r\n        const position: StartPosition = { x: box.x, y: box.y };\r\n        BangAnimation.generateBang(this._scene, position);\r\n        box.destroy();\r\n        shell.setAlive(false);\r\n    }\r\n\r\n    protected stonesShellsCollision(stone: Phaser.GameObjects.Sprite, shell: Shell): void {\r\n        const vector: Phaser.Math.Vector2 = this._scene.physics.velocityFromAngle(shell.angle + 270, +20); // +270 - trick to set sparkle just before the stone\r\n        const position: StartPosition = { x: shell.x + vector.x, y: shell.y + vector.y };\r\n        SparkleAnimation.generateBang(this._scene, position);\r\n        shell.setAlive(false);\r\n    }\r\n\r\n    protected handlePlayerStop(gameObject: Phaser.GameObjects.Sprite, player: Player): void {\r\n        gameObject.body.stop();\r\n        player.body.stop();\r\n    }\r\n\r\n    protected handlePlayerShootOnEnemyVehicle(enemy: EnemyVehicle, shell: Shell): void {\r\n        const position: StartPosition = { x: enemy.x, y: enemy.y };\r\n        BangAnimation.generateBang(this._scene, position);\r\n        enemy.destroyEnemy(shell);\r\n        shell.setAlive(false);\r\n    }\r\n\r\n    protected handlePlayerShootOnEnemiesTurrets(turretsPlatform: Phaser.GameObjects.Sprite, shell: Shell): void {\r\n        let position: StartPosition = null;\r\n        this._enemyTurrets.forEach((item: Turret) => {\r\n            if (turretsPlatform === item.platform) {\r\n                position = { x: item.turret.x, y: item.turret.y };\r\n                item.destroyTurret(shell);\r\n                BangAnimation.generateBang(this._scene, position);\r\n                shell.setAlive(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    protected handlePlayerShootOnEnemiesStatic(enemy: Phaser.GameObjects.Sprite, shell: Shell): void {\r\n        let position: StartPosition = null;\r\n        position = { x: enemy.x, y: enemy.y };\r\n        if (enemy instanceof Radar) {\r\n            enemy.destroyRadar(shell);\r\n        }\r\n        // if (enemy.frame.name === \"platform1\") {\r\n        //     (enemy as Radar).destroyRadar();\r\n        // }\r\n        // else if (enemy.frame.name === \"headquarterRu\") {\r\n        //     (enemy as Headquarter).destroyHeadquarter();\r\n        //     this._headquarterRu = null;\r\n        // }\r\n        else if (enemy instanceof Headquarter) {\r\n            enemy.destroyHeadquarter();\r\n            this._headquarterRu = null;\r\n        }\r\n        BangAnimation.generateBang(this._scene, position);\r\n        shell.setAlive(false);\r\n    }\r\n    \r\n    protected get direction(): number {\r\n        let direction = PLAYER_SPEED.NONE;\r\n\r\n        // if (this._cursor.up.isDown) direction = PLAYER_SPEED.FORWARD;\r\n        if (this._cursor.up.isDown) direction = (this._vehicleType === \"player_tank\") ? PLAYER.TANK.SPEED : PLAYER.BMP.SPEED;\r\n        // else if (this._cursor.down.isDown) direction = PLAYER_SPEED.BACKWARD;\r\n        else if (this._cursor.down.isDown) direction = (this._vehicleType === \"player_tank\") ? -PLAYER.TANK.SPEED : -PLAYER.BMP.SPEED;\r\n        \r\n        return direction;\r\n    }\r\n\r\n    // set the vehicle`s speed\r\n    protected get velocity(): number {\r\n        const vehicleSpeed = Math.abs(this._velocity); // make the speed absolute, without negative meaning\r\n        const maxSpeed = this.getMaxSpeed();\r\n        // if the player clicks on the key Up or Down and\r\n        // current vehicle`s speed is less than max speed (10)\r\n        // increase the vehicle`s speed by multipling acceleration with direction, which can be negative or positive\r\n\r\n        if (this.direction && vehicleSpeed < maxSpeed) {\r\n            this._velocity += this.direction;\r\n        }\r\n        else if ((this.direction && vehicleSpeed > maxSpeed) || (!this.direction && vehicleSpeed > 0)) { // if the player doesn`t click on the key Up or Down and\r\n            this._velocity -= this._velocity; // current vehicle`s speed is more than max speed (10) ->\r\n            // decrease the vehicle`s speed by multipling acceleration with previous direction, which can be negative or positive\r\n        }\r\n        return this._velocity;\r\n    }\r\n\r\n    protected get turn(): number {\r\n        let turn = TURNS.NONE;\r\n\r\n        if (this._cursor.right.isDown) turn = TURNS.RIGHT;\r\n        else if (this._cursor.left.isDown) turn = TURNS.LEFT;\r\n        \r\n        return turn;\r\n    }\r\n\r\n    protected getMaxSpeed(): number {\r\n        return SPEED.BASIC * this._map.getTileFriction(this);\r\n    }\r\n\r\n    // set the vehicle`s angle, when the vehicle is turning to the right or to the left\r\n    public getAngle(): number {\r\n        return this.angle + this.turn;\r\n    }\r\n\r\n    protected getVelocityFromAngle(): Phaser.Math.Vector2{ // get sprite`s speed with account of sprite`s angle\r\n        const vector2 = new Phaser.Math.Vector2();\r\n        // vector2 дает нам правильное смещение картинки/спрайта по оси х/у\r\n        // первый параметр - текущий угол картинки (по умолчанию 90 град. то есть вправо). Машинка смотрит вверх, поэтому нужно подправить угол\r\n        // второй параметр - ускорение картинки (положительное/отрицатильное). То есть или вперед, или назад\r\n        return vector2.setToPolar(this.rotation - Math.PI/2, this.velocity);\r\n    }\r\n\r\n    public fire(): void {\r\n        if (this.groupOfShells) {\r\n            this.groupOfShells.createFire(this);\r\n        }\r\n    }\r\n\r\n    public move(): void {\r\n        // the vehicle is moving with account of turn`s angle\r\n        this.setAngle(this.getAngle());\r\n        const velocity = this.getVelocityFromAngle();\r\n        this.body?.setVelocity(velocity.x, velocity.y);\r\n\r\n        if (this._fire.isDown && this) this.fire();\r\n    }\r\n\r\n    public setAlive(status: boolean): void {\r\n        this.body.enable = status;\r\n        this.setVisible(status);\r\n        this.setActive(status);\r\n    }\r\n\r\n    public destroyPlayer(shell: Shell): void {\r\n        this._armour -= shell.damage;\r\n        if (this._vehicleType === \"player_tank\") {\r\n            if ((this._armour < 100) && (this._armour >= 50)) {\r\n                this.setTexture(\"objects\", \"player_tank1\");\r\n            } else if ((this._armour < 50) && (this._armour > 0)) {\r\n                this.setTexture(\"objects\", \"player_tank2\");\r\n            } else if (this._armour <= 0) {\r\n                this._scene.events.emit(\"first_player_dead\");\r\n                this.destroy();\r\n            }\r\n        } else if (this._vehicleType === \"player_ifv\") {\r\n            if ((this._armour < 77) && (this._armour >= 40)) {\r\n                this.setTexture(\"objects\", \"player_ifv1\");\r\n            } else if ((this._armour < 40) && (this._armour > 0)) {\r\n                this.setTexture(\"objects\", \"player_ifv2\");\r\n            } else if (this._armour <= 0) {\r\n                this._scene.events.emit(\"first_player_dead\");\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n}","import { PLAYER, PLAYER_SPEED, StartPosition, TURNS } from \"../../../utils/utils\";\r\nimport Map from \"../../Map\";\r\nimport Shell from \"../../shells/Shell\";\r\nimport Player from \"./Player\";\r\n\r\nexport default class Player2 extends Player {\r\n    private _controls = null;\r\n    private _player1: Player = null;\r\n    public id: string = \"P2\";\r\n    constructor(scene: Phaser.Scene, position: StartPosition, atlasName: string, textureName: string, map: Map, shellTexture: string, experience: number) {\r\n        super(scene, position, atlasName, textureName, map, shellTexture, experience);\r\n        this._controls = this._scene.input.keyboard.addKeys({\"up\": Phaser.Input.Keyboard.KeyCodes.W, \"down\": Phaser.Input.Keyboard.KeyCodes.S, \"left\": Phaser.Input.Keyboard.KeyCodes.A, \"right\": Phaser.Input.Keyboard.KeyCodes.D});\r\n        this._fire = this._scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\r\n    }\r\n\r\n    public set player1(player1: Player) {\r\n        this._player1 = player1;\r\n    }\r\n\r\n    public handleCollisions(): void {\r\n        // handle shooting on boxes\r\n        this._scene.physics.add.overlap(this._map.explosiveObjects, this.groupOfShells, this.boxesShellsCollision, null, this);\r\n        // handle shooting on stones\r\n        this._scene.physics.add.overlap(this._map.stones, this.groupOfShells, this.stonesShellsCollision, null, this);\r\n        const stopableArray: Phaser.GameObjects.Sprite[] = [...this._map.stones, ...this._map.explosiveObjects];\r\n        if (this._player1) stopableArray.push(this._player1);\r\n        if (this._radar) stopableArray.push(this._radar);\r\n        if (this._headquarterUa) stopableArray.push(this._headquarterUa);\r\n        if (this._headquarterRu) stopableArray.push(this._headquarterRu);\r\n        // handle stop player when collide\r\n        this._scene.physics.add.collider(stopableArray, this, this.handlePlayerStop, null, this);\r\n        // handle player shooting\r\n        this._scene.physics.add.overlap(this._enemyVehicles, this.groupOfShells, this.handlePlayerShootOnEnemyVehicle, null, this);\r\n        this._scene.physics.add.overlap(this._enemyTurretPlatforms, this.groupOfShells, this.handlePlayerShootOnEnemiesTurrets, null, this);\r\n        this._scene.physics.add.overlap(this._enemiesStatic, this.groupOfShells, this.handlePlayerShootOnEnemiesStatic, null, this);\r\n    }\r\n\r\n    protected get direction(): number {\r\n        let direction = PLAYER_SPEED.NONE;\r\n\r\n        if (this._controls.up.isDown) direction = (this._vehicleType === \"player_tank\") ? PLAYER.TANK.SPEED : PLAYER.BMP.SPEED;\r\n        else if (this._controls.down.isDown) direction = (this._vehicleType === \"player_tank\") ? -PLAYER.TANK.SPEED : -PLAYER.BMP.SPEED;\r\n        \r\n        return direction;\r\n    }\r\n\r\n    protected get turn(): number {\r\n        let turn = TURNS.NONE;\r\n\r\n        if (this._controls.right.isDown) turn = TURNS.RIGHT;\r\n        else if (this._controls.left.isDown) turn = TURNS.LEFT;\r\n        \r\n        return turn;\r\n    }\r\n\r\n    public destroyPlayer(shell: Shell): void {\r\n        this._armour -= shell.damage;\r\n        if (this._vehicleType === \"player_tank\") {\r\n            if ((this._armour < 100) && (this._armour >= 50)) {\r\n                this.setTexture(\"objects\", \"player_tank1\");\r\n            } else if ((this._armour < 50) && (this._armour > 0)) {\r\n                this.setTexture(\"objects\", \"player_tank2\");\r\n            } else if (this._armour <= 0) {\r\n                this._scene.events.emit(\"second_player_dead\");\r\n                this.destroy();\r\n            }\r\n        } else if (this._vehicleType === \"player_ifv\") {\r\n            if ((this._armour < 77) && (this._armour >= 40)) {\r\n                this.setTexture(\"objects\", \"player_ifv1\");\r\n            } else if ((this._armour < 40) && (this._armour > 0)) {\r\n                this.setTexture(\"objects\", \"player_ifv2\");\r\n            } else if (this._armour <= 0) {\r\n                this._scene.events.emit(\"second_player_dead\");\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n}","import BootScene from \"./scenes/BootScene\";\r\nimport PreloadScene from \"./scenes/PreloadScene\";\r\nimport StartScene from \"./scenes/StartScene\";\r\nimport Level_1 from \"./scenes/Level_1\";\r\nimport PostStartScene from \"./scenes/PostStartScene\";\r\nimport HelpScene from \"./scenes/HelpScene\";\r\nimport PrelevelScene from \"./scenes/PrelevelScene\";\r\nimport PostlevelScene from \"./scenes/PostlevelScene\";\r\nimport GameOverScene from \"./scenes/GameOverScene\";\r\nimport Level_2 from \"./scenes/Level_2\";\r\nimport Level_3 from \"./scenes/Level_3\";\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: window.innerWidth, // set according to background image size / map`s size!!!\r\n    height: window.innerHeight, // set according to background image size / map`s size!!!\r\n    scene: [\r\n        new BootScene(),\r\n        new PreloadScene(),\r\n        new StartScene(),\r\n        new HelpScene(),\r\n        new PostStartScene(),\r\n        new PrelevelScene(),\r\n        new PostlevelScene(),\r\n        new Level_1(),\r\n        new Level_2(),\r\n        new Level_3(),\r\n        new GameOverScene()\r\n    ],\r\n    scale: {\r\n        mode: Phaser.Scale.FIT, // auto scaling of all sprites\r\n        autoCenter: Phaser.Scale.CENTER_BOTH // canvas centering in the center of the screen\r\n    },\r\n    physics: {\r\n        default: \"arcade\",\r\n        arcade: { debug: false} // if true -> shows objects` frames\r\n    }\r\n};\r\n\r\nconst game = new Phaser.Game(config);","export default class BootScene extends Phaser.Scene {\r\n    constructor() {super({key: \"boot-scene\"});}\r\n\r\n    protected preload(): void {\r\n        this.load.image(\"logo\", \"assets/images/logo.png\");\r\n    }\r\n\r\n    protected create(): void {\r\n        this.scene.start(\"preload-scene\");\r\n    }\r\n}","export default class GameOverScene extends Phaser.Scene {\r\n    constructor() { super({ key: \"gameover-scene\" }) }\r\n    \r\n    protected create(): void {\r\n        console.log(\"Game over scene\");\r\n    }\r\n}","export default class HelpScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({ key: \"help-scene\" });\r\n    }\r\n}","import Map from \"../classes/Map\";\r\nimport GroupOfEnemies from \"../classes/vehicles/enemies/GroupOfEnemies\";\r\nimport Player from \"../classes/vehicles/player/Player\";\r\nimport Player2 from \"../classes/vehicles/player/Player2\";\r\nimport { createText, LevelData } from \"../utils/utils\";\r\n\r\nexport default class Level extends Phaser.Scene {\r\n    protected _map: Map = null;\r\n    protected _levelData: LevelData = null;\r\n    protected _player1: Player = null;\r\n    protected _player2: Player2 = null;\r\n    protected _players: Player[] = [];\r\n    protected _enemies: GroupOfEnemies = null;\r\n    protected _enemiesText: Phaser.GameObjects.Text = null;\r\n    protected _finishText: Phaser.GameObjects.Text = null;\r\n    protected _enemiesArray: number[] = null;\r\n    protected _enemiesLeft: number = 0;\r\n    protected _maxEnemies: number = 6;\r\n    protected _style: Phaser.Types.GameObjects.Text.TextStyle = null;\r\n    protected _fightingMelody: Phaser.Sound.BaseSound = null;\r\n\r\n    constructor(levelName: string) {\r\n        super({ key: levelName });\r\n    }\r\n\r\n    protected preload(): void {\r\n        this.add.sprite(0, 0, \"background\").setOrigin(0);\r\n        this._style = { fontFamily: \"RussoOne\", fontSize: \"40px\", color: \"#E62B0D\", stroke: \"#000000\", strokeThickness: 3 };\r\n        this._fightingMelody = this.sound.add(\"fightMelody\", {volume: 0.1, loop: true});\r\n    }\r\n\r\n    protected createFinishText(): void {\r\n        this._finishText = createText(this, this.sys.game.canvas.width, this.sys.game.canvas.height + 150, \"GAME OVER\", { fontFamily: \"RussoOne\", fontSize: \"90px\", color: \"#E62B0D\", stroke: \"#000000\", strokeThickness: 3 });\r\n        this._finishText.setX(this.sys.game.canvas.width / 2 - this._finishText.width / 2);\r\n        this._finishText.depth = 10;\r\n    }\r\n\r\n    protected listenEvents(): void {}\r\n    \r\n    protected enemyDead(toCount: boolean, isHeadquarterRuDestroyed?: boolean): void { }\r\n    \r\n    protected headquarterDestroyed(): void {}\r\n\r\n    protected firstPlayerDead(): void {\r\n        this._levelData.firstPlayer = null;\r\n        this._player1 = null;\r\n        if (this._levelData.multiplayerGame && this._player2) return;\r\n        else {\r\n            this.events.removeListener(\"first_player_dead\");\r\n            this.events.removeListener(\"second_player_dead\");\r\n            this.events.removeListener(\"enemy_dead\");\r\n            this.runTween();\r\n        }\r\n    }\r\n\r\n    protected secondPlayerDead(): void {\r\n        this._levelData.secondPlayer = null;\r\n        this._player2 = null;\r\n        if (this._levelData.multiplayerGame && !this._player1) {\r\n            this.events.removeListener(\"first_player_dead\");\r\n            this.events.removeListener(\"second_player_dead\");\r\n            this.events.removeListener(\"enemy_dead\");\r\n            this.runTween();\r\n        }\r\n    }\r\n\r\n    protected runTween(): void {\r\n        this.tweens.add({\r\n            targets: this._finishText,\r\n            y: this.sys.game.canvas.height / 2 - 70,\r\n            duration: 3000,\r\n            onComplete: () => {\r\n                this._fightingMelody.stop();\r\n                this.tweens.killAll();\r\n                this.scene.start(\"start-scene\");\r\n            }\r\n        });\r\n    }\r\n\r\n    // see docs -> Scene.Methods\r\n    update(): void {\r\n        this._players.forEach((player: Player) => {\r\n            if (player && player.active) player.move();\r\n        });\r\n        this.checkMapBounds([...this._enemies.getChildren(), ...this._players]);\r\n    }\r\n\r\n    protected checkMapBounds(vehicles: Phaser.GameObjects.GameObject[]): void {\r\n        if (vehicles && vehicles.length > 0) {\r\n            for (let i = 0; i < vehicles.length; i++) {\r\n                if (!vehicles[i].body) continue;\r\n        \r\n                if (vehicles[i].body.y > this._map.tilemap.heightInPixels - 30) {\r\n                    vehicles[i].body.y = this._map.tilemap.heightInPixels - 30 - 20;\r\n                }\r\n                if (vehicles[i].body.y < 0) {\r\n                    vehicles[i].body.y = 20;\r\n                }\r\n                if (vehicles[i].body.x < 0) {\r\n                    vehicles[i].body.x = 20;\r\n                }\r\n                if (vehicles[i].body.x > this._map.tilemap.widthInPixels - 30) {\r\n                    vehicles[i].body.x = this._map.tilemap.widthInPixels - 30 - 20;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import Map from \"../classes/Map\";\r\nimport Player from \"../classes/vehicles/player/Player\";\r\nimport { createLevelText, showPlayerExperience, StartPosition } from \"../utils/utils\";\r\nimport GroupOfEnemies from \"../classes/vehicles/enemies/GroupOfEnemies\";\r\nimport Player2 from \"../classes/vehicles/player/Player2\";\r\nimport Level from \"./Level\";\r\n\r\nexport default class Level_1 extends Level {\r\n    constructor() {super(\"level-1\");}\r\n\r\n    protected create({ data }): void {\r\n        this._map = new Map(this, 1);\r\n        this._levelData = data;\r\n        // add all enemies 1 - enemy BTR, 2 - enemy BMP, 3 - enemy tank, count reverse! number of bases on each level is different!!!\r\n        this._enemiesArray = [3, 1, 2, 2, 3, 1, 2, 1, 1, 3, 2, 1];\r\n        // add player/s\r\n        const player = this._map.getPlayer(1);\r\n        let position: StartPosition = {x: player.x, y: player.y};\r\n        this._player1 = new Player(this, position, \"objects\", `player_${this._levelData.firstPlayer.vehicle}`, this._map, this._levelData.firstPlayer.shellType, this._levelData.firstPlayer.experience);\r\n        this._players.push(this._player1);\r\n        showPlayerExperience(this, this._style, true, this._levelData.firstPlayer.experience);\r\n        if (this._levelData.secondPlayer) {\r\n            const player2 = this._map.getPlayer(2);\r\n            position = {x: player2.x, y: player2.y};\r\n            this._player2 = new Player2(this, position, \"objects\", `player_${this._levelData.secondPlayer.vehicle}`, this._map, this._levelData.secondPlayer.shellType, this._levelData.secondPlayer.experience);\r\n            this._players.push(this._player2);\r\n            this._player2.player1 = this._player1;\r\n            this._player1.player2 = this._player2;\r\n            this._enemiesArray.forEach((item: number, _, array) => array.push(item)); // if there are two players -> twice enemies\r\n            this._maxEnemies = 10;\r\n            // create exp level 2 player\r\n            showPlayerExperience(this, this._style, false, this._levelData.secondPlayer.experience);\r\n        }\r\n        this._enemiesLeft = this._enemiesArray.length;\r\n        this._enemies = new GroupOfEnemies(this.physics.world, this, this._map, this._enemiesArray, this._maxEnemies, 3, this._player1, this._player2);\r\n        this._enemiesText = createLevelText(this, 15, 30, `Enemies: ${this._enemiesLeft}`, this._style);\r\n\r\n        this._player1.enemyVehicles = this._enemies;\r\n        this._player1.handleCollisions();\r\n        if (this._levelData.secondPlayer) {\r\n            this._player2.enemyVehicles = this._enemies;\r\n            this._player2.handleCollisions();\r\n        }\r\n        this.listenEvents();\r\n        this.cameras.main.setBounds(0, 0, this._map.tilemap.widthInPixels, this._map.tilemap.heightInPixels); // set map`s bounds as camera`s bounds\r\n        this.cameras.main.startFollow(this._player1); // set camera to center on the player`s tank\r\n        this._fightingMelody.play();\r\n        this.createFinishText();\r\n    }\r\n\r\n    protected listenEvents(): void {\r\n        // when we assign custom event, \"ON\" adds this custom event to listeners` pool, it may add as many times the SAME CUSTOM event as we assign it\r\n        if (this.events.listeners(\"first_player_dead\").length <= 0) {\r\n            this.events.on(\"first_player_dead\", this.firstPlayerDead, this);\r\n        }\r\n        if (this.events.listeners(\"second_player_dead\").length <= 0) {\r\n            this.events.on(\"second_player_dead\", this.secondPlayerDead, this);\r\n        }\r\n        if (this.events.listeners(\"enemy_dead\").length <= 0) {\r\n            this.events.on(\"enemy_dead\", this.enemyDead, this);\r\n        }\r\n    }\r\n\r\n    protected enemyDead(toCount: boolean): void {\r\n        if (toCount) {\r\n            --this._enemies.counter;\r\n            --this._enemiesLeft;\r\n            this._enemiesText.setText(`Enemies: ${this._enemiesLeft}`);\r\n        }\r\n        if (this._enemiesLeft <= 0) {\r\n            // create LevelData and pass it to the next scene\r\n            this._levelData.nextLevelNumber = \"level-2\";\r\n            this._levelData.nextLevelName = \"First Blood\";\r\n            if (this._player1 && this._levelData.firstPlayer) {\r\n                this._levelData.firstPlayer.experience = this._player1.experience;\r\n                this._levelData.firstPlayer.tanksPerLevel = this._player1.tanksPerLevel;\r\n                this._levelData.firstPlayer.bmpPerLevel = this._player1.bmpPerLevel;\r\n                this._levelData.firstPlayer.btrPerLevel = this._player1.btrPerLevel;\r\n                this._levelData.firstPlayer.turretsPerLevel = this._player1.turretsPerLevel;\r\n                this._levelData.firstPlayer.radarPerLevel = this._player1.radarPerLevel;\r\n            }\r\n            if (this._player2 && this._levelData.secondPlayer) {\r\n                this._levelData.secondPlayer.experience = this._player2.experience;\r\n                this._levelData.secondPlayer.tanksPerLevel = this._player2.tanksPerLevel;\r\n                this._levelData.secondPlayer.bmpPerLevel = this._player2.bmpPerLevel;\r\n                this._levelData.secondPlayer.btrPerLevel = this._player2.btrPerLevel;\r\n                this._levelData.secondPlayer.turretsPerLevel = this._player2.turretsPerLevel;\r\n                this._levelData.secondPlayer.radarPerLevel = this._player2.radarPerLevel;\r\n            }\r\n            this._fightingMelody.stop();\r\n            this.scene.start(\"postlevel-scene\", { data: this._levelData });\r\n        }\r\n    }\r\n}","import Map from \"../classes/Map\";\r\nimport Player from \"../classes/vehicles/player/Player\";\r\nimport { createLevelText, showPlayerExperience, StartPosition } from \"../utils/utils\";\r\nimport GroupOfEnemies from \"../classes/vehicles/enemies/GroupOfEnemies\";\r\nimport Player2 from \"../classes/vehicles/player/Player2\";\r\nimport Turret from \"../classes/vehicles/enemies/Turret\";\r\nimport Level from \"./Level\";\r\n\r\nexport default class Level_2 extends Level {\r\n    private _turret1: Turret = null;\r\n    private _turret2: Turret = null;\r\n    \r\n    constructor() {super(\"level-2\");}\r\n\r\n    protected create({ data }): void {\r\n        this._map = new Map(this, 2);\r\n        this._levelData = data;\r\n        // add all enemies 1 - enemy BTR, 2 - enemy BMP, 3 - enemy tank, count reverse! number of bases on each level is different!!!\r\n        this._enemiesArray = [3, 1, 2, 2, 3, 1, 3, 1, 2, 2, 3, 1, 2, 1, 1, 3, 2, 1];\r\n        let position: StartPosition = null;\r\n        // add player/s\r\n        if (this._levelData.multiplayerGame) {\r\n            this._maxEnemies = 10;\r\n            this._enemiesArray.forEach((item: number, _, array) => array.push(item)); // if it`s multiplayerGame -> twice enemies\r\n\r\n            if (this._levelData.firstPlayer) {\r\n                const player = this._map.getPlayer(1);\r\n                position = { x: player.x, y: player.y };\r\n                this._player1 = new Player(this, position, \"objects\", `player_${this._levelData.firstPlayer.vehicle}`, this._map, this._levelData.firstPlayer.shellType, this._levelData.firstPlayer.experience); // experience from 0 to 200\r\n                showPlayerExperience(this, this._style, true, this._levelData.firstPlayer.experience);\r\n            }\r\n            if (this._levelData.secondPlayer) {\r\n                const player2 = this._map.getPlayer(2);\r\n                position = {x: player2.x, y: player2.y};\r\n                this._player2 = new Player2(this, position, \"objects\", `player_${this._levelData.secondPlayer.vehicle}`, this._map, this._levelData.secondPlayer.shellType, this._levelData.secondPlayer.experience);\r\n                showPlayerExperience(this, this._style, false, this._levelData.secondPlayer.experience);\r\n            }\r\n        } else {\r\n            const player = this._map.getPlayer(1);\r\n            let position: StartPosition = { x: player.x, y: player.y };\r\n            this._player1 = new Player(this, position, \"objects\", `player_${this._levelData.firstPlayer.vehicle}`, this._map, this._levelData.firstPlayer.shellType, this._levelData.firstPlayer.experience); // experience from 0 to 200\r\n            showPlayerExperience(this, this._style, true, this._levelData.firstPlayer.experience);\r\n        }\r\n\r\n        this._enemiesLeft = this._enemiesArray.length;\r\n        this._enemies = new GroupOfEnemies(this.physics.world, this, this._map, this._enemiesArray, this._maxEnemies, 3, this._player1, this._player2);\r\n        let turretPosition: StartPosition = this._map.getTurretPosition(1);\r\n        this._turret1 = new Turret(this, turretPosition, this._map, this._enemies, this._player1, this._player2, null, 1);\r\n        this._enemiesLeft++;\r\n        turretPosition = this._map.getTurretPosition(2);\r\n        this._turret2 = new Turret(this, turretPosition, this._map, this._enemies, this._player1, this._player2, null, 2);\r\n        this._enemiesLeft++;\r\n        this._enemiesText = createLevelText(this, 15, 30, `Enemies: ${this._enemiesLeft}`, this._style);\r\n        \r\n        if (this._player1) {\r\n            this._players.push(this._player1);\r\n            this._player1.enemyVehicles = this._enemies;\r\n            this._player1.enemyTurrets = [this._turret1, this._turret2];\r\n            this._player1.enemyTurretPlatforms = [this._turret1.platform, this._turret2.platform];\r\n            if (this._player2) this._player1.player2 = this._player2;\r\n            this._player1.handleCollisions();\r\n        }\r\n        if (this._player2) {\r\n            this._players.push(this._player2);\r\n            this._player2.enemyVehicles = this._enemies;\r\n            this._player2.enemyTurrets = [this._turret1, this._turret2];\r\n            this._player2.enemyTurretPlatforms = [this._turret1.platform, this._turret2.platform];\r\n            if (this._player1) this._player2.player1 = this._player1;\r\n            this._player2.handleCollisions();\r\n        }\r\n\r\n        this.listenEvents();\r\n        this.cameras.main.setBounds(0, 0, this._map.tilemap.widthInPixels, this._map.tilemap.heightInPixels); // set map`s bounds as camera`s bounds\r\n        this._player1 ? this.cameras.main.startFollow(this._player1) : this.cameras.main.startFollow(this._player2); // set camera to center on the player`s tank\r\n        this._fightingMelody.play();\r\n        this.createFinishText();\r\n    }\r\n\r\n    protected listenEvents(): void {\r\n        if (this.events.listeners(\"first_player_dead\").length <= 0) {\r\n            this.events.on(\"first_player_dead\", this.firstPlayerDead, this);\r\n        }\r\n        if (this.events.listeners(\"second_player_dead\").length <= 0) {\r\n            this.events.on(\"second_player_dead\", this.secondPlayerDead, this);\r\n        }\r\n        if (this.events.listeners(\"enemy_dead\").length <= 0) {\r\n            this.events.on(\"enemy_dead\", this.enemyDead, this);\r\n        }\r\n    }\r\n\r\n    protected enemyDead(toCount: boolean): void {\r\n        if (toCount) {\r\n            --this._enemies.counter;\r\n            --this._enemiesLeft;\r\n            this._enemiesText.setText(`Enemies: ${this._enemiesLeft}`);\r\n        }\r\n        if (this._enemiesLeft <= 0) {\r\n            // create LevelData and pass it to the next scene\r\n            this._levelData.nextLevelNumber = \"level-3\";\r\n            this._levelData.nextLevelName = \"Protect and Destroy\";\r\n            if (this._player1 && this._levelData.firstPlayer) {\r\n                this._levelData.firstPlayer.experience = this._player1.experience;\r\n                this._levelData.firstPlayer.tanksPerLevel = this._player1.tanksPerLevel;\r\n                this._levelData.firstPlayer.bmpPerLevel = this._player1.bmpPerLevel;\r\n                this._levelData.firstPlayer.btrPerLevel = this._player1.btrPerLevel;\r\n                this._levelData.firstPlayer.turretsPerLevel = this._player1.turretsPerLevel;\r\n                this._levelData.firstPlayer.radarPerLevel = this._player1.radarPerLevel;\r\n            }\r\n            if (this._player2 && this._levelData.secondPlayer) {\r\n                this._levelData.secondPlayer.experience = this._player2.experience;\r\n                this._levelData.secondPlayer.tanksPerLevel = this._player2.tanksPerLevel;\r\n                this._levelData.secondPlayer.bmpPerLevel = this._player2.bmpPerLevel;\r\n                this._levelData.secondPlayer.btrPerLevel = this._player2.btrPerLevel;\r\n                this._levelData.secondPlayer.turretsPerLevel = this._player2.turretsPerLevel;\r\n                this._levelData.secondPlayer.radarPerLevel = this._player2.radarPerLevel;\r\n            }\r\n            this._fightingMelody.stop(); \r\n            this.scene.start(\"postlevel-scene\", { data: this._levelData });\r\n        }\r\n    }\r\n}","import Headquarter from \"../classes/Headquarter\";\r\nimport Map from \"../classes/Map\";\r\nimport GroupOfEnemies from \"../classes/vehicles/enemies/GroupOfEnemies\";\r\nimport Radar from \"../classes/vehicles/enemies/Radar\";\r\nimport Turret from \"../classes/vehicles/enemies/Turret\";\r\nimport Player from \"../classes/vehicles/player/Player\";\r\nimport Player2 from \"../classes/vehicles/player/Player2\";\r\nimport { createLevelText, showPlayerExperience, StartPosition } from \"../utils/utils\";\r\nimport Level from \"./Level\";\r\n\r\nexport default class Level_3 extends Level {\r\n    private _turret: Turret = null;\r\n    private _radar: Radar = null;\r\n    private _headquarterRu: Headquarter = null;\r\n    private _headquarterUa: Headquarter = null;\r\n    \r\n    constructor() {super(\"level-3\");}\r\n\r\n    protected create({data}): void {\r\n        this._map = new Map(this, 3);\r\n        this._levelData = data;\r\n        // add all enemies 1 - enemy BTR, 2 - enemy BMP, 3 - enemy tank, count reverse! number of bases on each level is different!!!\r\n        this._enemiesArray = [3, 1, 2, 3, 2, 1, 1, 3, 2, 1, 1, 3, 2, 1, 2, 2, 3, 1, 2, 1];\r\n        let position: StartPosition = null;\r\n        // add player/s\r\n        if (this._levelData.multiplayerGame) {\r\n            this._maxEnemies = 10;\r\n            this._enemiesArray.forEach((item: number, _, array) => array.push(item)); // if it`s multiplayerGame -> twice enemies\r\n\r\n            if (this._levelData.firstPlayer) {\r\n                const player = this._map.getPlayer(1);\r\n                position = { x: player.x, y: player.y };\r\n                this._player1 = new Player(this, position, \"objects\", `player_${this._levelData.firstPlayer.vehicle}`, this._map, this._levelData.firstPlayer.shellType, this._levelData.firstPlayer.experience); // experience from 0 to 200\r\n                showPlayerExperience(this, this._style, true, this._levelData.firstPlayer.experience);\r\n            }\r\n            if (this._levelData.secondPlayer) {\r\n                const player2 = this._map.getPlayer(2);\r\n                position = {x: player2.x, y: player2.y};\r\n                this._player2 = new Player2(this, position, \"objects\", `player_${this._levelData.secondPlayer.vehicle}`, this._map, this._levelData.secondPlayer.shellType, this._levelData.secondPlayer.experience);\r\n                showPlayerExperience(this, this._style, false, this._levelData.secondPlayer.experience);\r\n            }\r\n        } else {\r\n            const player = this._map.getPlayer(1);\r\n            let position: StartPosition = { x: player.x, y: player.y };\r\n            this._player1 = new Player(this, position, \"objects\", `player_${this._levelData.firstPlayer.vehicle}`, this._map, this._levelData.firstPlayer.shellType, this._levelData.firstPlayer.experience); // experience from 0 to 200\r\n            showPlayerExperience(this, this._style, true, this._levelData.firstPlayer.experience);\r\n        }\r\n        \r\n        this._headquarterRu = new Headquarter(this, this._map.getHeadquarterPosition(true), \"objects\", \"headquarterRu\");\r\n        this._headquarterUa = new Headquarter(this, this._map.getHeadquarterPosition(false), \"objects\", \"headquarterUa\");\r\n        this._enemiesLeft = this._enemiesArray.length;\r\n        this._enemies = new GroupOfEnemies(this.physics.world, this, this._map, this._enemiesArray, this._maxEnemies, 3, this._player1, this._player2, this._headquarterUa, this._headquarterRu);\r\n        let turretPosition: StartPosition = this._map.getTurretPosition(1);\r\n        this._turret = new Turret(this, turretPosition, this._map, this._enemies, this._player1, this._player2);\r\n        this._enemiesLeft++;\r\n        turretPosition = this._map.getRadarPosition();\r\n        this._radar = new Radar(this, turretPosition, \"objects\", \"platform1\", this._enemies, this._player1, this._player2);\r\n        this._turret.radar = this._radar;\r\n        this._enemiesLeft++;\r\n        this._enemiesText = createLevelText(this, 15, 30, `Enemies: ${this._enemiesLeft}`, this._style);\r\n\r\n        if (this._player1) {\r\n            this._players.push(this._player1);\r\n            this._player1.enemyVehicles = this._enemies;\r\n            this._player1.enemyTurrets = [this._turret];\r\n            this._player1.enemyTurretPlatforms = [this._turret.platform];\r\n            this._player1.headquarterRu = this._headquarterRu;\r\n            this._player1.headquarterUa = this._headquarterUa;\r\n            this._player1.radar = this._radar;\r\n            this._player1.enemiesStatic = [this._headquarterRu, this._headquarterUa, this._radar];\r\n            if (this._player2) this._player1.player2 = this._player2;\r\n            this._player1.handleCollisions();\r\n        }\r\n        if (this._player2) {\r\n            this._players.push(this._player2);\r\n            this._player2.enemyVehicles = this._enemies;\r\n            this._player2.enemyTurrets = [this._turret];\r\n            this._player2.enemyTurretPlatforms = [this._turret.platform];\r\n            this._player2.headquarterRu = this._headquarterRu;\r\n            this._player2.headquarterUa = this._headquarterUa;\r\n            this._player2.radar = this._radar;\r\n            this._player2.enemiesStatic = [this._headquarterRu, this._headquarterUa, this._radar];\r\n            if (this._player1) this._player2.player1 = this._player1;\r\n            this._player2.handleCollisions();\r\n        }\r\n\r\n        this.listenEvents();\r\n        this.cameras.main.setBounds(0, 0, this._map.tilemap.widthInPixels, this._map.tilemap.heightInPixels); // set map`s bounds as camera`s bounds\r\n        this._player1 ? this.cameras.main.startFollow(this._player1) : this.cameras.main.startFollow(this._player2); // set camera to center on the player`s tank\r\n        this._fightingMelody.play();\r\n        this.createFinishText();\r\n    }\r\n\r\n    protected listenEvents(): void {\r\n        if (this.events.listeners(\"first_player_dead\").length <= 0) {\r\n            this.events.on(\"first_player_dead\", this.firstPlayerDead, this);\r\n        }\r\n        if (this.events.listeners(\"second_player_dead\").length <= 0) {\r\n            this.events.on(\"second_player_dead\", this.secondPlayerDead, this);\r\n        }\r\n        if (this.events.listeners(\"enemy_dead\").length <= 0) {\r\n            this.events.on(\"enemy_dead\", this.enemyDead, this);\r\n        }\r\n        if (this.events.listeners(\"enemy_headquarter_destroyed\").length <= 0) {\r\n            this.events.on(\"enemy_headquarter_destroyed\", this.enemyDead, this);\r\n        }\r\n        if (this.events.listeners(\"headquarterUa_destroyed\").length <= 0) {\r\n            this.events.on(\"headquarterUa_destroyed\", this.headquarterDestroyed, this);\r\n        }\r\n    }\r\n\r\n    protected enemyDead(toCount: boolean, isHeadquarterRuDestroyed?: boolean): void {\r\n        if (toCount) {\r\n            --this._enemies.counter;\r\n            --this._enemiesLeft;\r\n            this._enemiesText.setText(`Enemies: ${this._enemiesLeft}`);\r\n        }\r\n        if (this._enemiesLeft <= 0 && isHeadquarterRuDestroyed) {\r\n            // create LevelData and pass it to the next scene\r\n            this._levelData.nextLevelNumber = \"level-4\";\r\n            this._levelData.nextLevelName = \"?\";\r\n            if (this._player1 && this._levelData.firstPlayer) {\r\n                this._levelData.firstPlayer.experience = this._player1.experience;\r\n                this._levelData.firstPlayer.tanksPerLevel = this._player1.tanksPerLevel;\r\n                this._levelData.firstPlayer.bmpPerLevel = this._player1.bmpPerLevel;\r\n                this._levelData.firstPlayer.btrPerLevel = this._player1.btrPerLevel;\r\n                this._levelData.firstPlayer.turretsPerLevel = this._player1.turretsPerLevel;\r\n                this._levelData.firstPlayer.radarPerLevel = this._player1.radarPerLevel;\r\n            }\r\n            if (this._player2 && this._levelData.secondPlayer) {\r\n                this._levelData.secondPlayer.experience = this._player2.experience;\r\n                this._levelData.secondPlayer.tanksPerLevel = this._player2.tanksPerLevel;\r\n                this._levelData.secondPlayer.bmpPerLevel = this._player2.bmpPerLevel;\r\n                this._levelData.secondPlayer.btrPerLevel = this._player2.btrPerLevel;\r\n                this._levelData.secondPlayer.turretsPerLevel = this._player2.turretsPerLevel;\r\n                this._levelData.secondPlayer.radarPerLevel = this._player2.radarPerLevel;\r\n            }\r\n            this._fightingMelody.stop();\r\n            this.scene.start(\"postlevel-scene\", { data: this._levelData });\r\n        }\r\n    }\r\n\r\n    protected headquarterDestroyed(): void {\r\n        this._headquarterUa = null;\r\n        if (!this._headquarterUa) this.runTween();\r\n    }\r\n}","import { createRectangleFrame, createText, LevelData } from \"../utils/utils\";\r\n\r\nexport default class PostStartScene extends Phaser.Scene {\r\n    private _data: LevelData = null;\r\n    private _style: Phaser.Types.GameObjects.Text.TextStyle = null;\r\n    private _tank1Rect: Phaser.GameObjects.Graphics = null;\r\n    private _ifv1Rect: Phaser.GameObjects.Graphics = null;\r\n    private _tank2Rect: Phaser.GameObjects.Graphics = null;\r\n    private _ifv2Rect: Phaser.GameObjects.Graphics = null;\r\n    private _buttonClick: Phaser.Sound.BaseSound = null;\r\n    \r\n    constructor() { super({ key: \"post-start-scene\" }); }\r\n    \r\n    protected preload(): void {this._buttonClick = this.sound.add(\"click\");}\r\n\r\n    protected create(data: any): void {\r\n        this.init();\r\n        data.onePlayer ? this.onePlayerMenu() : this.twoPlayerMenu();\r\n    }\r\n    \r\n    private init(): void {\r\n        this._data = {\r\n            nextLevelNumber: \"level-1\",\r\n            nextLevelName: \"Training Camp\",\r\n            multiplayerGame: false,\r\n            firstPlayer: {\r\n                vehicle: \"tank\",\r\n                shellType: \"bulletRed2\",\r\n                experience: 0,\r\n                tanksPerLevel: 0,\r\n                bmpPerLevel: 0,\r\n                btrPerLevel: 0,\r\n                turretsPerLevel: 0,\r\n                radarPerLevel:0\r\n            },\r\n            secondPlayer: {\r\n                vehicle: \"tank\",\r\n                shellType: \"bulletRed2\",\r\n                experience: 0,\r\n                tanksPerLevel: 0,\r\n                bmpPerLevel: 0,\r\n                btrPerLevel: 0,\r\n                turretsPerLevel: 0,\r\n                radarPerLevel: 0\r\n            }\r\n        };\r\n        this._style = { fontFamily: \"RussoOne\", fontSize: \"55px\", color: \"#FFFFFF\" };\r\n\r\n        this._tank1Rect = createRectangleFrame(this, window.innerWidth / 2 + 90, window.innerHeight / 2 - 200);\r\n        this._ifv1Rect = createRectangleFrame(this, window.innerWidth / 2 + 190, window.innerHeight / 2 - 200);\r\n        this._tank2Rect = createRectangleFrame(this, window.innerWidth / 2 + 90, window.innerHeight / 2 - 50);\r\n        this._ifv2Rect = createRectangleFrame(this, window.innerWidth / 2 + 190, window.innerHeight / 2 - 50);\r\n    }\r\n\r\n    private onePlayerMenu(): void {\r\n        this._data.secondPlayer = null;\r\n\r\n        this.add.graphics()\r\n            .fillStyle(0xE7590D)\r\n            .fillRoundedRect(window.innerWidth / 2 - 200, window.innerHeight / 2 - 125, 400, 250, 16);\r\n        const style: Phaser.Types.GameObjects.Text.TextStyle = { fontFamily: \"RussoOne\", fontSize: \"40px\", color: \"#FFFFFF\" };\r\n        createText(this, window.innerWidth / 2 - 155, window.innerHeight / 2 - 100, \"Choose vehicle\", style);\r\n        this.add.sprite(window.innerWidth / 2 - 80, window.innerHeight / 2, \"objects\", \"player_tank\");\r\n        this.add.sprite(window.innerWidth / 2 + 70, window.innerHeight / 2, \"objects\", \"player_ifv\");\r\n        const tank: Phaser.GameObjects.Text = createText(this, window.innerWidth / 2 - 125, window.innerHeight / 2 + 50, \"tank\", style);\r\n        tank.setInteractive({ useHandCursor: true });\r\n        tank.once(\"pointerdown\", () => {\r\n            this._buttonClick.play();\r\n            this.scene.start(\"prelevel-scene\", { data: this._data });\r\n        });\r\n        const ifv: Phaser.GameObjects.Text = createText(this, window.innerWidth / 2 + 40, window.innerHeight / 2 + 50, \"IFV\", style);\r\n        ifv.setInteractive({ useHandCursor: true });\r\n        ifv.once(\"pointerdown\", () => {\r\n            this._buttonClick.play();\r\n            this._data.firstPlayer.vehicle = \"ifv\";\r\n            this._data.firstPlayer.shellType = \"bulletSand1\";\r\n            this.scene.start(\"prelevel-scene\", {data: this._data});\r\n        });\r\n    }\r\n\r\n    private twoPlayerMenu(): void {\r\n        this._data.multiplayerGame = true;\r\n        createText(this, window.innerWidth / 2 - 300, 50, \"Choose your vehicles\", this._style);\r\n        createText(this, window.innerWidth / 2 - 250, window.innerHeight / 2 - 170, \"1st player\", this._style);\r\n        const tank1: Phaser.GameObjects.Sprite = this.add.sprite(window.innerWidth / 2 + 130, window.innerHeight / 2 - 150, \"objects\", \"player_tank\");\r\n        tank1.setInteractive({ useHandCursor: true });\r\n        tank1.on(\"pointerdown\", () => {\r\n            this._buttonClick.play();\r\n            if (!this._tank1Rect.visible) {\r\n                this._data.firstPlayer.vehicle = \"tank\";\r\n                this._data.firstPlayer.shellType = \"bulletRed2\";\r\n                this._tank1Rect.visible = true;\r\n                this._ifv1Rect.visible = false;\r\n            }\r\n        });\r\n        const ifv1: Phaser.GameObjects.Sprite = this.add.sprite(window.innerWidth / 2 + 230, window.innerHeight / 2 - 150, \"objects\", \"player_ifv\");\r\n        ifv1.setInteractive({ useHandCursor: true });\r\n        ifv1.on(\"pointerdown\", () => {\r\n            this._buttonClick.play();\r\n            if (!this._ifv1Rect.visible) {\r\n                this._data.firstPlayer.vehicle = \"ifv\";\r\n                this._data.firstPlayer.shellType = \"bulletSand1\";\r\n                this._ifv1Rect.visible = true;\r\n                this._tank1Rect.visible = false;\r\n            }\r\n        });\r\n        createText(this, window.innerWidth / 2 - 250, window.innerHeight / 2 - 20, \"2nd player\", this._style);\r\n        const tank2: Phaser.GameObjects.Sprite = this.add.sprite(window.innerWidth / 2 + 130, window.innerHeight / 2, \"objects\", \"player_tank\");\r\n        tank2.setInteractive({ useHandCursor: true });\r\n        tank2.on(\"pointerdown\", () => {\r\n            this._buttonClick.play();\r\n            if (!this._tank2Rect.visible) {\r\n                this._data.secondPlayer.vehicle = \"tank\";\r\n                this._data.secondPlayer.shellType = \"bulletRed2\";\r\n                this._tank2Rect.visible = true;\r\n                this._ifv2Rect.visible = false;\r\n            }\r\n        });\r\n        const ifv2: Phaser.GameObjects.Sprite = this.add.sprite(window.innerWidth / 2 + 230, window.innerHeight / 2, \"objects\", \"player_ifv\");\r\n        ifv2.setInteractive({ useHandCursor: true });\r\n        ifv2.on(\"pointerdown\", () => {\r\n            this._buttonClick.play();\r\n            if (!this._ifv2Rect.visible) {\r\n                this._data.secondPlayer.vehicle = \"ifv\";\r\n                this._data.secondPlayer.shellType = \"bulletSand1\";\r\n                this._ifv2Rect.visible = true;\r\n                this._tank2Rect.visible = false;\r\n            }\r\n        });\r\n\r\n        this.add.graphics()\r\n            .fillStyle(0xE7590D)\r\n            .fillRoundedRect(window.innerWidth / 2 - 100, window.innerHeight - 175, 200, 100, 16);\r\n        const startButtonText: Phaser.GameObjects.Text = createText(this, window.innerWidth / 2 - 69, window.innerHeight - 155, \"Start\", this._style);\r\n        startButtonText.setInteractive({ useHandCursor: true });\r\n        startButtonText.once(\"pointerdown\", () => {\r\n            this._buttonClick.play();\r\n            this.scene.start(\"prelevel-scene\", { data: this._data });\r\n        });\r\n    }\r\n}","import { createText, LevelData } from \"../utils/utils\";\r\n\r\nexport default class PostlevelScene extends Phaser.Scene {\r\n    private _data: LevelData = null;\r\n    private _startTimer: Phaser.Time.TimerEvent = null;\r\n    private _endTimer: Phaser.Time.TimerEvent = null;\r\n    private _1PlayerBtrTween: Phaser.Tweens.Tween = null;\r\n    private _1PlayerBtrText: Phaser.GameObjects.Text = null;\r\n    private _1PlayerBmpTween: Phaser.Tweens.Tween = null;\r\n    private _1PlayerBmpText: Phaser.GameObjects.Text = null;\r\n    private _1PlayerTankTween: Phaser.Tweens.Tween = null;\r\n    private _1PlayerTankText: Phaser.GameObjects.Text = null;\r\n    private _1PlayerTurretsTween: Phaser.Tweens.Tween = null;\r\n    private _1PlayerTurretsText: Phaser.GameObjects.Text = null;\r\n    private _1PlayerRadarTween: Phaser.Tweens.Tween = null;\r\n    private _1PlayerRadarText: Phaser.GameObjects.Text = null;\r\n    private _1PlayerTotalTween: Phaser.Tweens.Tween = null;\r\n    private _1PlayerTotalText: Phaser.GameObjects.Text = null;\r\n    private _1PlayerTotal: number = 0;\r\n    private _2PlayerBtrTween: Phaser.Tweens.Tween = null;\r\n    private _2PlayerBtrText: Phaser.GameObjects.Text = null;\r\n    private _2PlayerBmpTween: Phaser.Tweens.Tween = null;\r\n    private _2PlayerBmpText: Phaser.GameObjects.Text = null;\r\n    private _2PlayerTankTween: Phaser.Tweens.Tween = null;\r\n    private _2PlayerTankText: Phaser.GameObjects.Text = null;\r\n    private _2PlayerTurretsTween: Phaser.Tweens.Tween = null;\r\n    private _2PlayerTurretsText: Phaser.GameObjects.Text = null;\r\n    private _2PlayerRadarTween: Phaser.Tweens.Tween = null;\r\n    private _2PlayerRadarText: Phaser.GameObjects.Text = null;\r\n    private _2PlayerTotalTween: Phaser.Tweens.Tween = null;\r\n    private _2PlayerTotalText: Phaser.GameObjects.Text = null;\r\n    private _2PlayerTotal: number = 0;\r\n    private _header: Phaser.Types.GameObjects.Text.TextStyle = null;\r\n    private _mainStyle: Phaser.Types.GameObjects.Text.TextStyle = null;\r\n    private _secondaryStyle: Phaser.Types.GameObjects.Text.TextStyle = null;\r\n    private _melody: Phaser.Sound.BaseSound = null;\r\n    private _coinSound: Phaser.Sound.BaseSound = null;\r\n    private _width: number = null;\r\n\r\n    constructor() { super({ key: \"postlevel-scene\" });}\r\n    \r\n    protected preload(): void {\r\n        this._header = { fontFamily: \"RussoOne\", fontSize: \"70px\", color: \"#00FF00\" };\r\n        this._mainStyle = { fontFamily: \"RussoOne\", fontSize: \"65px\", color: \"#00FF00\" };\r\n        this._secondaryStyle = { fontFamily: \"RussoOne\", fontSize: \"50px\", color: \"#00FF00\" };\r\n        this._melody = this.sound.add(\"mainMelody\", { volume: 0.4, loop: true });\r\n        this._coinSound = this.sound.add(\"coinSound\", { volume: 1, loop: true });\r\n        this._width = this.sys.game.canvas.width;\r\n    }\r\n\r\n    protected create({data}): void {\r\n        this._data = data;\r\n\r\n        // start counting points in 0.8 sec\r\n        this._startTimer = this.time.addEvent({\r\n            delay: 800,\r\n            loop: false,\r\n            callback: this.startCountPoints,\r\n            callbackScope: this\r\n        });\r\n\r\n        const levelNumberText: Phaser.GameObjects.Text = createText(this, 0, 150, \"Level complete!\", this._header);\r\n        levelNumberText.setX(this.sys.game.canvas.width / 2 - levelNumberText.width / 2);\r\n        \r\n        if (this._data.firstPlayer) this.firstPlayerResults();\r\n        if (this._data.secondPlayer) this.secondPlayerResults();\r\n        this._melody.play();\r\n    }\r\n\r\n    private startCountPoints(): void {\r\n        if (this._data.firstPlayer) this._1PlayerBtrTween.resume();\r\n        if (this._data.secondPlayer) this._2PlayerBtrTween.resume();\r\n        this._startTimer.remove();\r\n        this._coinSound.play();\r\n    }\r\n\r\n    private firstPlayerResults(): void {\r\n        this._1PlayerTotal = this._data.firstPlayer.btrPerLevel * 1 + this._data.firstPlayer.bmpPerLevel * 2 + this._data.firstPlayer.tanksPerLevel * 3 + this._data.firstPlayer.turretsPerLevel * 3 + this._data.firstPlayer.radarPerLevel * 1;\r\n        const header: Phaser.GameObjects.Text = createText(this, 250, 250, \"1st player\", this._mainStyle);\r\n        this._1PlayerBtrText = createText(this, 250, 330, `BTRs: ${this._data.firstPlayer.btrPerLevel} × 1xp = 0xp`, this._secondaryStyle);\r\n        this._1PlayerBmpText = createText(this, 250, 410, `BMPs: ${this._data.firstPlayer.bmpPerLevel} × 2xp = 0xp`, this._secondaryStyle);\r\n        this._1PlayerTankText = createText(this, 250, 490, `Tanks: ${this._data.firstPlayer.tanksPerLevel} × 3xp = 0xp`, this._secondaryStyle);\r\n        this._1PlayerTurretsText = createText(this, 250, 570, `Turrets: ${this._data.firstPlayer.turretsPerLevel} × 3xp = 0xp`, this._secondaryStyle);\r\n        this._1PlayerRadarText = createText(this, 250, 650, `Radars: ${this._data.firstPlayer.radarPerLevel} × 1xp = 0xp`, this._secondaryStyle);\r\n        const dash: Phaser.GameObjects.Text = createText(this, 250, 670, \"_____________________\", this._secondaryStyle);\r\n        this._1PlayerTotalText = createText(this, 250, 740, `Total: 0xp`, this._secondaryStyle);\r\n        header.setX(this._1PlayerTankText.width / 3);\r\n        this._1PlayerBtrText.setX(this._1PlayerTankText.width / 3);\r\n        this._1PlayerBmpText.setX(this._1PlayerTankText.width / 3);\r\n        this._1PlayerTankText.setX(this._1PlayerTankText.width / 3);\r\n        this._1PlayerTurretsText.setX(this._1PlayerTankText.width / 3);\r\n        this._1PlayerRadarText.setX(this._1PlayerTankText.width / 3);\r\n        dash.setX(this._1PlayerTankText.width / 3);\r\n        this._1PlayerTotalText.setX(this._1PlayerTankText.width / 3);\r\n\r\n        this._1PlayerBtrTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.firstPlayer.btrPerLevel * 1,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._1PlayerBmpTween.resume()\r\n        });\r\n        this._1PlayerBmpTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.firstPlayer.bmpPerLevel * 2,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._1PlayerTankTween.resume()\r\n        });\r\n        this._1PlayerTankTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.firstPlayer.tanksPerLevel * 3,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._1PlayerTurretsTween.resume()\r\n        });\r\n        this._1PlayerTurretsTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.firstPlayer.turretsPerLevel * 3,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._1PlayerRadarTween.resume()\r\n        });\r\n        this._1PlayerRadarTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.firstPlayer.radarPerLevel * 1,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._1PlayerTotalTween.resume()\r\n        });\r\n        this._1PlayerTotalTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._1PlayerTotal,\r\n            duration: 1500,\r\n            paused: true,\r\n            onComplete: () => this.pauseBeforeCloseScene()\r\n        });\r\n    }\r\n\r\n    private secondPlayerResults(): void {\r\n        this._2PlayerTotal = this._data.secondPlayer.btrPerLevel * 1 + this._data.secondPlayer.bmpPerLevel * 2 + this._data.secondPlayer.tanksPerLevel * 3 + this._data.secondPlayer.turretsPerLevel * 3 + this._data.secondPlayer.radarPerLevel * 1;\r\n        const header: Phaser.GameObjects.Text = createText(this, this._width - 750, 250, \"2nd player\", this._mainStyle);\r\n        this._2PlayerBtrText = createText(this, this._width - 750, 330, `BTRs: ${this._data.secondPlayer.btrPerLevel} × 1xp = 0xp`, this._secondaryStyle);\r\n        this._2PlayerBmpText = createText(this, this._width - 750, 410, `BMPs: ${this._data.secondPlayer.bmpPerLevel} × 2xp = 0xp`, this._secondaryStyle);\r\n        this._2PlayerTankText = createText(this, this._width - 750, 490, `Tanks: ${this._data.secondPlayer.tanksPerLevel} × 3xp = 0xp`, this._secondaryStyle);\r\n        this._2PlayerTurretsText = createText(this, this._width - 750, 570, `Turrets: ${this._data.secondPlayer.turretsPerLevel} × 3xp = 0xp`, this._secondaryStyle);\r\n        this._2PlayerRadarText = createText(this, this._width - 750, 650, `Radars: ${this._data.secondPlayer.radarPerLevel} × 1xp = 0xp`, this._secondaryStyle);\r\n        const dash: Phaser.GameObjects.Text = createText(this, this._width - 750, 670, \"_____________________\", this._secondaryStyle);\r\n        this._2PlayerTotalText = createText(this, this._width - 750, 740, `Total: 0xp`, this._secondaryStyle);\r\n        header.setX(this._width - this._2PlayerTurretsText.width - this._2PlayerTurretsText.width / 3);\r\n        this._2PlayerBtrText.setX(this._width - this._2PlayerTurretsText.width - this._2PlayerTurretsText.width / 3);\r\n        this._2PlayerBmpText.setX(this._width - this._2PlayerTurretsText.width - this._2PlayerTurretsText.width / 3);\r\n        this._2PlayerTankText.setX(this._width - this._2PlayerTurretsText.width - this._2PlayerTurretsText.width / 3);\r\n        this._2PlayerTurretsText.setX(this._width - this._2PlayerTurretsText.width - this._2PlayerTurretsText.width / 3);\r\n        this._2PlayerRadarText.setX(this._width - this._2PlayerTurretsText.width - this._2PlayerTurretsText.width / 3);\r\n        dash.setX(this._width - this._2PlayerTurretsText.width - this._2PlayerTurretsText.width / 3);\r\n        this._2PlayerTotalText.setX(this._width - this._2PlayerTurretsText.width - this._2PlayerTurretsText.width / 3);\r\n\r\n        this._2PlayerBtrTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.secondPlayer.btrPerLevel * 1,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._2PlayerBmpTween.resume()\r\n        });\r\n        this._2PlayerBmpTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.secondPlayer.bmpPerLevel * 2,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._2PlayerTankTween.resume()\r\n        });\r\n        this._2PlayerTankTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.secondPlayer.tanksPerLevel * 3,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._2PlayerTurretsTween.resume()\r\n        });\r\n        this._2PlayerTurretsTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.secondPlayer.turretsPerLevel * 3,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._2PlayerRadarTween.resume()\r\n        });\r\n        this._2PlayerRadarTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._data.secondPlayer.radarPerLevel * 1,\r\n            duration: 1000,\r\n            paused: true,\r\n            onComplete: () => this._2PlayerTotalTween.resume()\r\n        });\r\n        this._2PlayerTotalTween = this.tweens.addCounter({\r\n            from: 0,\r\n            to: this._2PlayerTotal,\r\n            duration: 1500,\r\n            paused: true,\r\n            onComplete: this._data.firstPlayer ? () => { } : () => this.pauseBeforeCloseScene()\r\n        });\r\n    }\r\n\r\n    private pauseBeforeCloseScene(): void {\r\n        this._coinSound.stop();\r\n        this._endTimer = this.time.delayedCall(2000, this.startNextLevel, null, this)\r\n    }\r\n\r\n    private startNextLevel(): void {\r\n        this._endTimer.remove();\r\n        this._melody.stop();\r\n        this.scene.start(\"prelevel-scene\", { data: this._data })\r\n    }\r\n\r\n    update(): void {\r\n        if (this._data.firstPlayer) {\r\n            this._1PlayerBtrText.setText(`BTRs: ${this._data.firstPlayer.btrPerLevel} × 1xp = ${this._1PlayerBtrTween.getValue().toFixed(0)}xp`);\r\n            this._1PlayerBmpText.setText(`BMPs: ${this._data.firstPlayer.bmpPerLevel} × 2xp = ${this._1PlayerBmpTween.getValue().toFixed(0)}xp`);\r\n            this._1PlayerTankText.setText(`Tanks: ${this._data.firstPlayer.tanksPerLevel} × 3xp = ${this._1PlayerTankTween.getValue().toFixed(0)}xp`);\r\n            this._1PlayerTurretsText.setText(`Turrets: ${this._data.firstPlayer.turretsPerLevel} × 3xp = ${this._1PlayerTurretsTween.getValue().toFixed(0)}xp`);\r\n            this._1PlayerRadarText.setText(`Radars: ${this._data.firstPlayer.radarPerLevel} × 1xp = ${this._1PlayerRadarTween.getValue().toFixed(0)}xp`);\r\n            this._1PlayerTotalText.setText(`Total: ${this._1PlayerTotalTween.getValue().toFixed(0)}xp`);\r\n        }\r\n\r\n        if (this._data.secondPlayer) {\r\n            this._2PlayerBtrText.setText(`BTRs: ${this._data.secondPlayer.btrPerLevel} × 1xp = ${this._2PlayerBtrTween.getValue().toFixed(0)}xp`);\r\n            this._2PlayerBmpText.setText(`BMPs: ${this._data.secondPlayer.bmpPerLevel} × 2xp = ${this._2PlayerBmpTween.getValue().toFixed(0)}xp`);\r\n            this._2PlayerTankText.setText(`Tanks: ${this._data.secondPlayer.tanksPerLevel} × 3xp = ${this._2PlayerTankTween.getValue().toFixed(0)}xp`);\r\n            this._2PlayerTurretsText.setText(`Turrets: ${this._data.secondPlayer.turretsPerLevel} × 3xp = ${this._2PlayerTurretsTween.getValue().toFixed(0)}xp`);\r\n            this._2PlayerRadarText.setText(`Radars: ${this._data.secondPlayer.radarPerLevel} × 1xp = ${this._2PlayerRadarTween.getValue().toFixed(0)}xp`);\r\n            this._2PlayerTotalText.setText(`Total: ${this._2PlayerTotalTween.getValue().toFixed(0)}xp`);\r\n        }\r\n    }\r\n}","import { createText, LevelData } from \"../utils/utils\";\r\n\r\nexport default class PrelevelScene extends Phaser.Scene {\r\n    private _data: LevelData = null;\r\n    private _timer1: Phaser.Time.TimerEvent = null;\r\n    private _timer2: Phaser.Time.TimerEvent = null;\r\n    private _levelNumberStyle: Phaser.Types.GameObjects.Text.TextStyle = null;\r\n    private _levelNameStyle: Phaser.Types.GameObjects.Text.TextStyle = null;\r\n    private _melody: Phaser.Sound.BaseSound = null;\r\n\r\n    constructor() { super({ key: \"prelevel-scene\" }) }\r\n    \r\n    protected preload(): void {\r\n        this._levelNumberStyle = { fontFamily: \"RussoOne\", fontSize: \"60px\", color: \"#E62B0D\" };\r\n        this._levelNameStyle = { fontFamily: \"RussoOne\", fontSize: \"80px\", color: \"#E62B0D\" };\r\n        this._melody = this.sound.add('prelevelMelody');\r\n    }\r\n\r\n    protected create({data}): void {\r\n        this._data = data;\r\n        let levelNumber: string = this._data.nextLevelNumber;\r\n        levelNumber = levelNumber.replace(\"-\", \" \");\r\n        const levelNumberText: Phaser.GameObjects.Text = createText(this, 0, 300, levelNumber, this._levelNumberStyle);\r\n        levelNumberText.setX(this.sys.game.canvas.width / 2 - levelNumberText.width / 2);\r\n        let levelName: string = this._data.nextLevelName;\r\n        const levelNameText: Phaser.GameObjects.Text = createText(this, 0, 400, levelName, this._levelNameStyle);\r\n        levelNameText.setX(this.sys.game.canvas.width / 2 - levelNameText.width / 2);\r\n        this._timer1 = this.time.addEvent({ // play melody in 0.4 sec\r\n            delay: 400,\r\n            loop: false,\r\n            callback: this.playMelody,\r\n            callbackScope: this\r\n        });\r\n        this._timer2 = this.time.addEvent({ // start level scene in 4.2 sec\r\n            delay: 4200,\r\n            loop: false,\r\n            callback: this.startNextLevel,\r\n            callbackScope: this\r\n        });\r\n    }\r\n\r\n    private playMelody(): void {\r\n        this._melody.play();\r\n        this._timer1.remove();\r\n    }\r\n\r\n    private startNextLevel(): void {\r\n        this._timer2.remove();\r\n        this._melody.stop();\r\n        this.scene.start(this._data.nextLevelNumber, { data: this._data });\r\n    }\r\n}","import { LoadingBar } from \"../utils/LoadingBar\";\r\nimport { BANG_ANIMATION, RADAR_ANIMATION, SPARKLE_ANIMATION, XPOINTS_1_ANIMATION, XPOINTS_2_ANIMATION, XPOINTS_3_ANIMATION } from \"../utils/utils\";\r\n\r\nexport default class PreloadScene extends Phaser.Scene {\r\n    constructor() {super({key: \"preload-scene\"});}\r\n\r\n    protected preload(): void {\r\n        const sprite: Phaser.GameObjects.Sprite = this.add.sprite(0, 0, \"logo\").setOrigin(0);\r\n        sprite.setX(window.innerWidth / 2 - sprite.width / 2);\r\n        sprite.setY(window.innerHeight / 2 - sprite.height / 2);\r\n        new LoadingBar(this);\r\n\r\n        // load images as a tileset\r\n        this.load.spritesheet(\"tileset\", \"assets/images/tilemap.png\", { frameWidth: 64, frameHeight: 64, margin: 0, spacing: 0 });\r\n        this.load.tilemapTiledJSON(\"tilemap\", \"assets/images/tilemap.json\");\r\n        this.load.atlas(\"objects\", \"assets/images/objects.png\", \"assets/images/objects.json\");\r\n\r\n        this.load.audio(\"prelevelMelody\", \"assets/sounds/prelevelMelody.mp3\");\r\n        this.load.audio(\"mainMelody\", \"assets/sounds/mainMelody.mp3\");\r\n        this.load.audio(\"fightMelody\", \"assets/sounds/fightMelody.mp3\");\r\n        this.load.audio(\"playerIfvShooting\", \"assets/sounds/playerIfvShooting.mp3\");\r\n        this.load.audio(\"playerTankShooting\", \"assets/sounds/playerTankShooting.mp3\");\r\n        this.load.audio(\"simpleExplosion\", \"assets/sounds/simpleExplosion.mp3\");\r\n        this.load.audio(\"click\", \"assets/sounds/click.mp3\");\r\n        this.load.audio(\"coinSound\", \"assets/sounds/coinSound.mp3\");\r\n    }\r\n\r\n    protected create(): void {\r\n        this.scene.start(\"start-scene\");\r\n        this.loadAnimation(); // loading all animation safely\r\n    }\r\n\r\n    private loadAnimation(): void {\r\n        const bangFrames: Phaser.Types.Animations.AnimationFrame[] = this.anims.generateFrameNames(\"objects\", {\r\n            prefix: \"explosion\",\r\n            start: 1,\r\n            end: 5\r\n        });\r\n        this.anims.create({\r\n            key: BANG_ANIMATION,\r\n            frames: bangFrames,\r\n            frameRate: 5,\r\n            duration: 800, // miliseconds\r\n            repeat: 0, // to play animation only once\r\n        });\r\n\r\n        const frames: Phaser.Types.Animations.AnimationFrame[] = this.anims.generateFrameNames(\"objects\", {\r\n            prefix: \"platform\",\r\n            start: 1,\r\n            end: 8\r\n        });\r\n        this.anims.create({\r\n            key: RADAR_ANIMATION,\r\n            frames: frames,\r\n            frameRate: 7,\r\n            duration: 1000, // miliseconds\r\n            repeat: -1, // to play animation infinitely\r\n        });\r\n\r\n        const sparkleFrame: Phaser.Types.Animations.AnimationFrame[] = this.anims.generateFrameNames(\"objects\", {\r\n            prefix: \"sparkle\",\r\n            start: 1,\r\n            end: 1\r\n        });\r\n        this.anims.create({\r\n            key: SPARKLE_ANIMATION,\r\n            frames: sparkleFrame,\r\n            frameRate: 7,\r\n            duration: 350, // miliseconds\r\n            repeat: 0, // to play animation only once\r\n        });\r\n\r\n        const xpoints1Frame: Phaser.Types.Animations.AnimationFrame[] = this.anims.generateFrameNames(\"objects\", {\r\n            suffix: \"xp\",\r\n            start: 1,\r\n            end: 1\r\n        });\r\n        this.anims.create({\r\n            key: XPOINTS_1_ANIMATION,\r\n            frames: xpoints1Frame,\r\n            frameRate: 1,\r\n            duration: 2000, // miliseconds\r\n            repeat: 0, // to play animation only once\r\n        });\r\n\r\n        const xpoints2Frame: Phaser.Types.Animations.AnimationFrame[] = this.anims.generateFrameNames(\"objects\", {\r\n            suffix: \"xp\",\r\n            start: 2,\r\n            end: 2\r\n        });\r\n        this.anims.create({\r\n            key: XPOINTS_2_ANIMATION,\r\n            frames: xpoints2Frame,\r\n            frameRate: 1,\r\n            duration: 2000, // miliseconds\r\n            repeat: 0, // to play animation only once\r\n        });\r\n\r\n        const xpoints3Frame: Phaser.Types.Animations.AnimationFrame[] = this.anims.generateFrameNames(\"objects\", {\r\n            suffix: \"xp\",\r\n            start: 3,\r\n            end: 3\r\n        });\r\n        this.anims.create({\r\n            key: XPOINTS_3_ANIMATION,\r\n            frames: xpoints3Frame,\r\n            frameRate: 1,\r\n            duration: 2000, // miliseconds\r\n            repeat: 0, // to play animation only once\r\n        });\r\n    }\r\n}","import { createTextButton } from \"../utils/utils\";\r\n\r\nexport default class StartScene extends Phaser.Scene {\r\n    private _style: Phaser.Types.GameObjects.Text.TextStyle;\r\n    private _onePlayerTextButton: Phaser.GameObjects.Text;\r\n    private _twoPlayersTextButton: Phaser.GameObjects.Text;\r\n    private _help: Phaser.GameObjects.Text;\r\n    private _mainMelody: Phaser.Sound.BaseSound = null;\r\n    private _buttonClick: Phaser.Sound.BaseSound = null;\r\n\r\n    constructor() {\r\n        super({ key: \"start-scene\" });\r\n        this._style = { fontFamily: \"RussoOne\", fontSize: \"55px\", color: \"#FFFFFF\" };\r\n    }\r\n\r\n    protected preload(): void {\r\n        const sprite: Phaser.GameObjects.Sprite = this.add.sprite(0, 0, \"logo\").setOrigin(0);\r\n        sprite.setX(window.innerWidth / 2 - sprite.width / 2);\r\n        sprite.setY(window.innerHeight / 2 - sprite.height / 2 - 200);\r\n        this._mainMelody = this.sound.add(\"mainMelody\", {volume: 0.4, loop: true});\r\n        this._buttonClick = this.sound.add(\"click\");\r\n    }\r\n\r\n    protected create(): void {\r\n        this._onePlayerTextButton = createTextButton(this, 50, \"1 player\", this._style);\r\n        this._onePlayerTextButton.once(\"pointerdown\", () => {\r\n            this._mainMelody.stop();\r\n            this._buttonClick.play();\r\n            this.scene.start(\"post-start-scene\", {onePlayer: true});\r\n        });\r\n        this._twoPlayersTextButton = createTextButton(this, 130, \"2 players\", this._style, this._onePlayerTextButton.width);\r\n        this._twoPlayersTextButton.once(\"pointerdown\", () => {\r\n            this._mainMelody.stop();\r\n            this._buttonClick.play();\r\n            this.scene.start(\"post-start-scene\", {onePlayer: false});\r\n        });\r\n        this._help = createTextButton(this, 210, \"Help\", this._style, this._onePlayerTextButton.width);\r\n        this._help.on(\"pointerdown\", () => {\r\n            this._mainMelody.stop();\r\n            this._buttonClick.play();\r\n            this.scene.start(\"help-scene\");\r\n        });\r\n        this._mainMelody.play();\r\n    }\r\n}","export class LoadingBar {\r\n    private scene: Phaser.Scene;\r\n    private style: any;\r\n    private progressBox: Phaser.GameObjects.Graphics;\r\n    private progressBar: Phaser.GameObjects.Graphics;\r\n\r\n    constructor(scene: Phaser.Scene) {\r\n        this.scene = scene;\r\n        this.style = {\r\n            boxColor: 0xD3D3D3,\r\n            barColor: 0xFFF8DC,\r\n            x: (this.scene.game.config.width) as number / 2 - 450,\r\n            y: (this.scene.game.config.height) as number / 2 + 250,\r\n            width: 900,\r\n            height: 25\r\n        };\r\n        this.progressBox = new Phaser.GameObjects.Graphics(this.scene);\r\n        this.progressBox = this.scene.add.graphics();\r\n        this.progressBar = this.scene.add.graphics();\r\n\r\n        this.showProgressBox();\r\n        this.setEvents();\r\n    }\r\n\r\n    setEvents() {\r\n        this.scene.load.on(\"progress\", this.showProgressBar, this);\r\n        this.scene.load.on(\"complete\", this.onLoadComplete, this);\r\n    }\r\n\r\n    showProgressBox() {\r\n        this.progressBox\r\n            .fillStyle(this.style.boxColor) // grey color\r\n            .fillRect(this.style.x, this.style.y, this.style.width, this.style.height);\r\n    }\r\n\r\n    showProgressBar(value: number) {\r\n        this.progressBar\r\n            .clear()\r\n            .fillStyle(this.style.barColor) // yellow color\r\n            .fillRect(this.style.x, this.style.y, this.style.width * value, this.style.height);\r\n    }\r\n\r\n    onLoadComplete() {\r\n        this.progressBox.destroy();\r\n        this.progressBar.destroy();\r\n    }\r\n}","import EnemyVehicle from \"../classes/vehicles/enemies/EnemyVehicle\";\r\n\r\nexport enum PLAYER_SPEED {\r\n    NONE = 0,\r\n    FORWARD = 100,\r\n    BACKWARD = -100\r\n};\r\n\r\nexport enum TURNS {\r\n    NONE = 0,\r\n    RIGHT = 1.3,\r\n    LEFT = -1.3\r\n};\r\n\r\nexport enum SPEED {\r\n    BASIC = 150,\r\n    FASTER = 690, // enemy shell`s speed\r\n    FASTEST = 1000 // player shell`s speed\r\n};\r\n\r\nexport const GROUND_FRICTION = 0.5;\r\nexport const FRICTIONS = {\r\n    \"lake\": 0.1,\r\n    \"road\": 1\r\n};\r\n\r\nexport type StartPosition = {\r\n    x: number,\r\n    y: number\r\n};\r\n\r\nexport type LevelData = {\r\n    nextLevelNumber: string,\r\n    nextLevelName: string,\r\n    multiplayerGame: boolean,\r\n    firstPlayer: {\r\n        vehicle: string,\r\n        shellType: string,\r\n        experience: number,\r\n        tanksPerLevel: number,\r\n        bmpPerLevel: number,\r\n        btrPerLevel: number,\r\n        turretsPerLevel: number,\r\n        radarPerLevel: number\r\n    },\r\n    secondPlayer: {\r\n        vehicle: string,\r\n        shellType: string,\r\n        experience: number,\r\n        tanksPerLevel: number,\r\n        bmpPerLevel: number,\r\n        btrPerLevel: number,\r\n        turretsPerLevel: number,\r\n        radarPerLevel: number\r\n    }\r\n};\r\n\r\nexport const BANG_ANIMATION: string = \"BANG_ANIMATION\";\r\nexport const RADAR_ANIMATION: string = \"RADAR_ANIMATION\";\r\nexport const SPARKLE_ANIMATION: string = \"SPARKLE_ANIMATION\";\r\nexport const SHOOTING_ANIMATION: string = \"SHOOTING_ANIMATION\";\r\nexport const XPOINTS_1_ANIMATION: string = \"XPOINTS_1_ANIMATION\";\r\nexport const XPOINTS_2_ANIMATION: string = \"XPOINTS_2_ANIMATION\";\r\nexport const XPOINTS_3_ANIMATION: string = \"XPOINTS_3_ANIMATION\";\r\n\r\nexport enum DIRECTION {\r\n    RIGHT = \"RIGHT\",\r\n    DOWN = \"DOWN\",\r\n    LEFT = \"LEFT\",\r\n    UP = \"UP\"\r\n};\r\n\r\nexport const ENEMY = {\r\n    TANK: {\r\n        TYPE: \"TANK\",\r\n        SPEED: 60,\r\n        ARMOUR: 150,\r\n        SHELL_POWER: 45,\r\n        SHELL_TYPE: \"bulletDark3\"\r\n    },\r\n    BMP: {\r\n        TYPE: \"BMP\",\r\n        SPEED: 120,\r\n        ARMOUR: 70,\r\n        SHELL_POWER: 26,\r\n        SHELL_TYPE: \"bulletDark2\"\r\n    },\r\n    BTR: {\r\n        TYPE: \"BTR\",\r\n        SPEED: 190,\r\n        ARMOUR: 56,\r\n        SHELL_POWER: 13,\r\n        SHELL_TYPE: \"bulletDark1\"\r\n    },\r\n    TURRET: {\r\n        ARMOUR: 200,\r\n        SHELL_POWER: 45,\r\n        SHELL_TYPE: \"bulletDark3\"\r\n    }\r\n};\r\n\r\nexport const PLAYER = {\r\n    TANK: {\r\n        SPEED: 100,\r\n        ARMOUR: 100,\r\n        SHELL_POWER: 60,\r\n        SHELL_TYPE: \"bulletRed2\"\r\n    },\r\n    BMP: {\r\n        SPEED: 140,\r\n        ARMOUR: 77,\r\n        SHELL_POWER: 30,\r\n        SHELL_TYPE: \"bulletSand1\"\r\n    },\r\n};\r\n\r\nexport function handleDirection(enemy: EnemyVehicle): void {\r\n    switch (enemy.direction) {\r\n        case DIRECTION.DOWN:\r\n            enemy.body.y -= 5;\r\n            break;\r\n        case DIRECTION.LEFT:\r\n            enemy.body.x += 5;\r\n            break;\r\n        case DIRECTION.UP:\r\n            enemy.body.y += 5;\r\n            break;\r\n        case DIRECTION.RIGHT:\r\n            enemy.body.x -= 5;\r\n            break;\r\n    }\r\n}\r\n\r\nexport function goToOpositeDirection(enemy: EnemyVehicle): void {\r\n    switch (enemy.direction) {\r\n        case DIRECTION.DOWN:\r\n            // go up\r\n            enemy.body?.setVelocity(0, -enemy.velocity); // set direction\r\n            enemy.angle = 180; // set correct sprite`s angle\r\n            break;\r\n        case DIRECTION.LEFT:\r\n            // go right\r\n            enemy.body?.setVelocity(enemy.velocity, 0); // set direction\r\n            enemy.angle = -90; // set correct sprite`s angle\r\n            break;\r\n        case DIRECTION.UP:\r\n            // go down\r\n            enemy.body?.setVelocity(0, enemy.velocity); // set direction\r\n            enemy.angle = 0; // set correct sprite`s angle\r\n            break;\r\n        case DIRECTION.RIGHT:\r\n            enemy.body?.setVelocity(-enemy.velocity, 0); // set direction\r\n            enemy.angle = 90; // set correct sprite`s angle\r\n            break;\r\n    }\r\n}\r\n\r\nexport function createText(scene: Phaser.Scene, positionX: number, positionY: number, text: string, style: Phaser.Types.GameObjects.Text.TextStyle): Phaser.GameObjects.Text {\r\n    return scene.add.text(positionX, positionY, text, style).setOrigin(0);\r\n}\r\n\r\nexport function createTextButton(scene: Phaser.Scene, height: number, text: string, style: Phaser.Types.GameObjects.Text.TextStyle, textButtonWidth?: number): Phaser.GameObjects.Text {\r\n    const textButton: Phaser.GameObjects.Text = createText(scene, 0, 0, text, style);\r\n    const width: number = textButtonWidth ? textButtonWidth : textButton.width;\r\n    textButton.setX(window.innerWidth / 2 - width / 2);\r\n    textButton.setY(window.innerHeight / 2 + height);\r\n    textButton.setInteractive({ useHandCursor: true });\r\n    return textButton;\r\n}\r\n\r\nexport function createRectangleFrame(scene: Phaser.Scene, x: number, y: number): Phaser.GameObjects.Graphics {\r\n    const rectFrame: Phaser.GameObjects.Graphics = scene.add.graphics();\r\n    rectFrame.lineStyle(8, 0xE7590D, 1);\r\n    rectFrame.strokeRoundedRect(x, y, 80, 100, 8);\r\n    rectFrame.visible = false;\r\n    return rectFrame;\r\n}\r\n\r\nexport function createLevelText(scene: Phaser.Scene, positionX: number, positionY: number, text: string, style: Phaser.Types.GameObjects.Text.TextStyle): Phaser.GameObjects.Text {\r\n    const levelText: Phaser.GameObjects.Text = createText(scene, positionX, positionY, text, style);\r\n    levelText.depth = 10;\r\n    return levelText;\r\n}\r\n\r\nexport function getPlayersRank(experience: number): string {\r\n    if ((experience >= 10) && (experience < 20)) {\r\n        return \"lieutenant\";\r\n    } else if ((experience >= 20) && (experience < 30)) {\r\n        return \"captain\";\r\n    } else if ((experience >= 30) && (experience < 50)) {\r\n        return \"major\";\r\n    } else if ((experience >= 50) && (experience < 75)) {\r\n        return \"lieutenant_colonel\";\r\n    } else if ((experience >= 75) && (experience < 100)) {\r\n        return \"colonel\";\r\n    } else if ((experience >= 100) && (experience < 150)) {\r\n        return \"brigadier\";\r\n    } else if ((experience >= 150) && (experience < 200)) {\r\n        return \"major_general\";\r\n    } else if (experience > 200) {\r\n        return \"lieutenant_general\";\r\n    } else return \"second_lieutenant\";\r\n}\r\n\r\nexport function showPlayerExperience(scene: Phaser.Scene, style: Phaser.Types.GameObjects.Text.TextStyle, isFirst: boolean, experience: number) {\r\n    const width: number = scene.sys.game.canvas.width;\r\n    const rank: string = getPlayersRank(experience);\r\n    let sprite: Phaser.GameObjects.Sprite = null;\r\n    if (isFirst) {\r\n        createLevelText(scene, width - 80, 30, \"1st\", style);\r\n        sprite = scene.add.sprite(width - 40, 130, \"objects\", rank);\r\n    } else {\r\n        createLevelText(scene, width - 90, 200, \"2nd\", style);\r\n        sprite = scene.add.sprite(width - 40, 300, \"objects\", rank);\r\n    }\r\n    sprite.depth = 10;\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/game.ts\");\n",""],"names":[],"sourceRoot":""}